/*
 * generated by Xtext
 */
package org.xtext.example.ui;

import org.eclipse.jface.viewers.ILabelProvider;
import org.eclipse.ui.plugin.AbstractUIPlugin;
import org.eclipse.xtext.ui.editor.contentassist.XtextContentAssistProcessor;
import org.eclipse.xtext.ui.editor.outline.transformer.ISemanticModelTransformer;
import org.eclipse.xtext.ui.editor.quickfix.IssueResolutionProvider;
import org.eclipse.xtext.ui.editor.syntaxcoloring.ISemanticHighlightingCalculator;
import org.eclipse.xtext.ui.editor.syntaxcoloring.ISemanticHighlightingConfiguration;
import org.xtext.example.ui.labeling.SwrtjLabelProvider;
import org.xtext.example.ui.outline.SwrtjTransformer;
import org.xtext.example.ui.quickfix.SwrtjQuickfixProvider;
import org.xtext.example.ui.syntaxcoloring.SemanticHighlightingCalculator;
import org.xtext.example.ui.syntaxcoloring.SemanticHighlightingConfiguration;

import com.google.inject.Binder;
import com.google.inject.name.Names;
/**
 * Use this class to register components to be used within the IDE.
 */
public class SwrtjUiModule extends AbstractSwrtjUiModule {
	public SwrtjUiModule(AbstractUIPlugin plugin) {
		super(plugin);
	}

	public Class<? extends ISemanticHighlightingCalculator> bindISemanticHighlightingCalculator() {
		return SemanticHighlightingCalculator.class;
	}
	
	public Class<? extends ISemanticHighlightingConfiguration> bindISemanticHighlightingConfiguration() {
		return SemanticHighlightingConfiguration.class;
	}
	
	@Override
	public Class<? extends ISemanticModelTransformer> bindISemanticModelTransformer() {
		return SwrtjTransformer.class;
	}
	
	public Class<? extends IssueResolutionProvider> bindIssueResolutionProvider() {
		return SwrtjQuickfixProvider.class;
	}
	
	@Override
	public java.lang.Class<? extends ILabelProvider> bindILabelProvider() {
		return SwrtjLabelProvider.class;
	}
	
	@Override
	public void configure(Binder binder) {
		super.configure(binder);
		binder.bind(String.class).annotatedWith(Names.named(XtextContentAssistProcessor.
				                                COMPLETION_AUTO_ACTIVATION_CHARS)).toInstance( ".+");
	}
}

