/*
* generated by Xtext
*/
package org.xtext.example.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.xtext.example.services.SwrtjGrammarAccess;

public class SwrtjParser extends AbstractContentAssistParser {
	
	@Inject
	private SwrtjGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.xtext.example.ui.contentassist.antlr.internal.InternalSwrtjParser createParser() {
		org.xtext.example.ui.contentassist.antlr.internal.InternalSwrtjParser result = new org.xtext.example.ui.contentassist.antlr.internal.InternalSwrtjParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getElementAccess().getAlternatives(), "rule__Element__Alternatives");
					put(grammarAccess.getBaseRecordAccess().getAlternatives(), "rule__BaseRecord__Alternatives");
					put(grammarAccess.getRecordOperationAccess().getAlternatives(), "rule__RecordOperation__Alternatives");
					put(grammarAccess.getBaseTraitAccess().getAlternatives(), "rule__BaseTrait__Alternatives");
					put(grammarAccess.getTraitOperationAccess().getAlternatives(), "rule__TraitOperation__Alternatives");
					put(grammarAccess.getTraitElementAccess().getAlternatives(), "rule__TraitElement__Alternatives");
					put(grammarAccess.getFieldDeclarationAccess().getAlternatives_1(), "rule__FieldDeclaration__Alternatives_1");
					put(grammarAccess.getTypeAccess().getAlternatives(), "rule__Type__Alternatives");
					put(grammarAccess.getReturnTypeAccess().getAlternatives(), "rule__ReturnType__Alternatives");
					put(grammarAccess.getStatementAccess().getAlternatives(), "rule__Statement__Alternatives");
					put(grammarAccess.getBooleanOperatorAccess().getAlternatives(), "rule__BooleanOperator__Alternatives");
					put(grammarAccess.getAtomicBooleanExpressionAccess().getAlternatives(), "rule__AtomicBooleanExpression__Alternatives");
					put(grammarAccess.getCompareOperatorAccess().getAlternatives(), "rule__CompareOperator__Alternatives");
					put(grammarAccess.getLocalParameterAccess().getAlternatives(), "rule__LocalParameter__Alternatives");
					put(grammarAccess.getExpressionAccess().getAlternatives_1(), "rule__Expression__Alternatives_1");
					put(grammarAccess.getExpressionAccess().getOperatorListAlternatives_3_0_0(), "rule__Expression__OperatorListAlternatives_3_0_0");
					put(grammarAccess.getDottedExpressionAccess().getAlternatives_2_3_1(), "rule__DottedExpression__Alternatives_2_3_1");
					put(grammarAccess.getStartAccess().getAlternatives(), "rule__Start__Alternatives");
					put(grammarAccess.getBooleanConstantAccess().getAlternatives(), "rule__BooleanConstant__Alternatives");
					put(grammarAccess.getConstructorInvocationAccess().getAlternatives_3_0_0(), "rule__ConstructorInvocation__Alternatives_3_0_0");
					put(grammarAccess.getConstructorInvocationAccess().getAlternatives_3_1(), "rule__ConstructorInvocation__Alternatives_3_1");
					put(grammarAccess.getMessageAccess().getAlternatives(), "rule__Message__Alternatives");
					put(grammarAccess.getMethodInvocationAccess().getAlternatives_2_0(), "rule__MethodInvocation__Alternatives_2_0");
					put(grammarAccess.getMethodInvocationAccess().getAlternatives_2_1_1(), "rule__MethodInvocation__Alternatives_2_1_1");
					put(grammarAccess.getParameterAssignmentAccess().getAlternatives_2(), "rule__ParameterAssignment__Alternatives_2");
					put(grammarAccess.getFileAccess().getGroup(), "rule__File__Group__0");
					put(grammarAccess.getImportAccess().getGroup(), "rule__Import__Group__0");
					put(grammarAccess.getInterfaceAccess().getGroup(), "rule__Interface__Group__0");
					put(grammarAccess.getInterfaceAccess().getGroup_2(), "rule__Interface__Group_2__0");
					put(grammarAccess.getInterfaceAccess().getGroup_2_2(), "rule__Interface__Group_2_2__0");
					put(grammarAccess.getRecordAccess().getGroup(), "rule__Record__Group__0");
					put(grammarAccess.getTraitAccess().getGroup(), "rule__Trait__Group__0");
					put(grammarAccess.getClassAccess().getGroup(), "rule__Class__Group__0");
					put(grammarAccess.getClassAccess().getGroup_4(), "rule__Class__Group_4__0");
					put(grammarAccess.getProgramAccess().getGroup(), "rule__Program__Group__0");
					put(grammarAccess.getRecordExpressionAccess().getGroup(), "rule__RecordExpression__Group__0");
					put(grammarAccess.getRecordExpressionAccess().getGroup_1(), "rule__RecordExpression__Group_1__0");
					put(grammarAccess.getAnonimousRecordAccess().getGroup(), "rule__AnonimousRecord__Group__0");
					put(grammarAccess.getAnonimousRecordAccess().getGroup_4(), "rule__AnonimousRecord__Group_4__0");
					put(grammarAccess.getAnonimousRecordAccess().getGroup_4_2(), "rule__AnonimousRecord__Group_4_2__0");
					put(grammarAccess.getRecordNameAccess().getGroup(), "rule__RecordName__Group__0");
					put(grammarAccess.getRecordNameAccess().getGroup_1(), "rule__RecordName__Group_1__0");
					put(grammarAccess.getRecordNameAccess().getGroup_1_2(), "rule__RecordName__Group_1_2__0");
					put(grammarAccess.getNestedRecordExpressionAccess().getGroup(), "rule__NestedRecordExpression__Group__0");
					put(grammarAccess.getNestedRecordExpressionAccess().getGroup_3(), "rule__NestedRecordExpression__Group_3__0");
					put(grammarAccess.getNestedRecordExpressionAccess().getGroup_3_2(), "rule__NestedRecordExpression__Group_3_2__0");
					put(grammarAccess.getRecordOperationAccess().getGroup_0(), "rule__RecordOperation__Group_0__0");
					put(grammarAccess.getRecordOperationAccess().getGroup_1(), "rule__RecordOperation__Group_1__0");
					put(grammarAccess.getRecordOperationAccess().getGroup_2(), "rule__RecordOperation__Group_2__0");
					put(grammarAccess.getTraitExpressionAccess().getGroup(), "rule__TraitExpression__Group__0");
					put(grammarAccess.getTraitExpressionAccess().getGroup_1(), "rule__TraitExpression__Group_1__0");
					put(grammarAccess.getAnonimousTraitAccess().getGroup(), "rule__AnonimousTrait__Group__0");
					put(grammarAccess.getAnonimousTraitAccess().getGroup_4(), "rule__AnonimousTrait__Group_4__0");
					put(grammarAccess.getAnonimousTraitAccess().getGroup_4_2(), "rule__AnonimousTrait__Group_4_2__0");
					put(grammarAccess.getTraitNameAccess().getGroup(), "rule__TraitName__Group__0");
					put(grammarAccess.getTraitNameAccess().getGroup_1(), "rule__TraitName__Group_1__0");
					put(grammarAccess.getTraitNameAccess().getGroup_1_2(), "rule__TraitName__Group_1_2__0");
					put(grammarAccess.getNestedTraitExpressionAccess().getGroup(), "rule__NestedTraitExpression__Group__0");
					put(grammarAccess.getNestedTraitExpressionAccess().getGroup_3(), "rule__NestedTraitExpression__Group_3__0");
					put(grammarAccess.getNestedTraitExpressionAccess().getGroup_3_2(), "rule__NestedTraitExpression__Group_3_2__0");
					put(grammarAccess.getTraitOperationAccess().getGroup_0(), "rule__TraitOperation__Group_0__0");
					put(grammarAccess.getTraitOperationAccess().getGroup_1(), "rule__TraitOperation__Group_1__0");
					put(grammarAccess.getTraitOperationAccess().getGroup_2(), "rule__TraitOperation__Group_2__0");
					put(grammarAccess.getTraitOperationAccess().getGroup_3(), "rule__TraitOperation__Group_3__0");
					put(grammarAccess.getTraitOperationAccess().getGroup_4(), "rule__TraitOperation__Group_4__0");
					put(grammarAccess.getTraitOperationAccess().getGroup_5(), "rule__TraitOperation__Group_5__0");
					put(grammarAccess.getFieldDeclarationAccess().getGroup(), "rule__FieldDeclaration__Group__0");
					put(grammarAccess.getRequiredFieldAccess().getGroup(), "rule__RequiredField__Group__0");
					put(grammarAccess.getRequiredMethodAccess().getGroup(), "rule__RequiredMethod__Group__0");
					put(grammarAccess.getRequiredMethodAccess().getGroup_4(), "rule__RequiredMethod__Group_4__0");
					put(grammarAccess.getRequiredMethodAccess().getGroup_4_1(), "rule__RequiredMethod__Group_4_1__0");
					put(grammarAccess.getProvidedMethodAccess().getGroup(), "rule__ProvidedMethod__Group__0");
					put(grammarAccess.getProvidedMethodAccess().getGroup_5(), "rule__ProvidedMethod__Group_5__0");
					put(grammarAccess.getProvidedMethodAccess().getGroup_5_1(), "rule__ProvidedMethod__Group_5_1__0");
					put(grammarAccess.getConstructorAccess().getGroup(), "rule__Constructor__Group__0");
					put(grammarAccess.getConstructorAccess().getGroup_2(), "rule__Constructor__Group_2__0");
					put(grammarAccess.getConstructorAccess().getGroup_2_1(), "rule__Constructor__Group_2_1__0");
					put(grammarAccess.getReturnStatementAccess().getGroup(), "rule__ReturnStatement__Group__0");
					put(grammarAccess.getParameterAccess().getGroup(), "rule__Parameter__Group__0");
					put(grammarAccess.getBlockAccess().getGroup(), "rule__Block__Group__0");
					put(grammarAccess.getExpressionStatementAccess().getGroup(), "rule__ExpressionStatement__Group__0");
					put(grammarAccess.getIfThenElseStatementAccess().getGroup(), "rule__IfThenElseStatement__Group__0");
					put(grammarAccess.getIfThenElseStatementAccess().getGroup_7(), "rule__IfThenElseStatement__Group_7__0");
					put(grammarAccess.getWhileStatementAccess().getGroup(), "rule__WhileStatement__Group__0");
					put(grammarAccess.getBooleanExpressionAccess().getGroup(), "rule__BooleanExpression__Group__0");
					put(grammarAccess.getBooleanExpressionAccess().getGroup_2(), "rule__BooleanExpression__Group_2__0");
					put(grammarAccess.getSimpleComparationAccess().getGroup(), "rule__SimpleComparation__Group__0");
					put(grammarAccess.getSimpleComparationAccess().getGroup_2(), "rule__SimpleComparation__Group_2__0");
					put(grammarAccess.getNestedBooleanExpressionAccess().getGroup(), "rule__NestedBooleanExpression__Group__0");
					put(grammarAccess.getLocalParameterAccess().getGroup_0(), "rule__LocalParameter__Group_0__0");
					put(grammarAccess.getLocalParameterAccess().getGroup_1(), "rule__LocalParameter__Group_1__0");
					put(grammarAccess.getExpressionAccess().getGroup(), "rule__Expression__Group__0");
					put(grammarAccess.getExpressionAccess().getGroup_3(), "rule__Expression__Group_3__0");
					put(grammarAccess.getDottedExpressionAccess().getGroup(), "rule__DottedExpression__Group__0");
					put(grammarAccess.getDottedExpressionAccess().getGroup_1(), "rule__DottedExpression__Group_1__0");
					put(grammarAccess.getDottedExpressionAccess().getGroup_2(), "rule__DottedExpression__Group_2__0");
					put(grammarAccess.getDottedExpressionAccess().getGroup_2_3(), "rule__DottedExpression__Group_2_3__0");
					put(grammarAccess.getConstructorInvocationAccess().getGroup(), "rule__ConstructorInvocation__Group__0");
					put(grammarAccess.getConstructorInvocationAccess().getGroup_3(), "rule__ConstructorInvocation__Group_3__0");
					put(grammarAccess.getConstructorInvocationAccess().getGroup_3_0(), "rule__ConstructorInvocation__Group_3_0__0");
					put(grammarAccess.getCastAccess().getGroup(), "rule__Cast__Group__0");
					put(grammarAccess.getNestedExpressionAccess().getGroup(), "rule__NestedExpression__Group__0");
					put(grammarAccess.getMethodInvocationAccess().getGroup(), "rule__MethodInvocation__Group__0");
					put(grammarAccess.getMethodInvocationAccess().getGroup_2(), "rule__MethodInvocation__Group_2__0");
					put(grammarAccess.getMethodInvocationAccess().getGroup_2_1(), "rule__MethodInvocation__Group_2_1__0");
					put(grammarAccess.getParameterAssignmentAccess().getGroup(), "rule__ParameterAssignment__Group__0");
					put(grammarAccess.getFileAccess().getImportListAssignment_0(), "rule__File__ImportListAssignment_0");
					put(grammarAccess.getFileAccess().getElementListAssignment_1(), "rule__File__ElementListAssignment_1");
					put(grammarAccess.getImportAccess().getImportURIAssignment_1(), "rule__Import__ImportURIAssignment_1");
					put(grammarAccess.getInterfaceAccess().getConstructAssignment_0(), "rule__Interface__ConstructAssignment_0");
					put(grammarAccess.getInterfaceAccess().getNameAssignment_1(), "rule__Interface__NameAssignment_1");
					put(grammarAccess.getInterfaceAccess().getExtendsListAssignment_2_1(), "rule__Interface__ExtendsListAssignment_2_1");
					put(grammarAccess.getInterfaceAccess().getExtendsListAssignment_2_2_1(), "rule__Interface__ExtendsListAssignment_2_2_1");
					put(grammarAccess.getInterfaceAccess().getRequiredMethodListAssignment_4(), "rule__Interface__RequiredMethodListAssignment_4");
					put(grammarAccess.getRecordAccess().getConstructAssignment_0(), "rule__Record__ConstructAssignment_0");
					put(grammarAccess.getRecordAccess().getNameAssignment_1(), "rule__Record__NameAssignment_1");
					put(grammarAccess.getRecordAccess().getExpressionAssignment_3(), "rule__Record__ExpressionAssignment_3");
					put(grammarAccess.getTraitAccess().getConstructAssignment_0(), "rule__Trait__ConstructAssignment_0");
					put(grammarAccess.getTraitAccess().getNameAssignment_1(), "rule__Trait__NameAssignment_1");
					put(grammarAccess.getTraitAccess().getExpressionAssignment_3(), "rule__Trait__ExpressionAssignment_3");
					put(grammarAccess.getClassAccess().getConstructAssignment_0(), "rule__Class__ConstructAssignment_0");
					put(grammarAccess.getClassAccess().getNameAssignment_1(), "rule__Class__NameAssignment_1");
					put(grammarAccess.getClassAccess().getImplementsListAssignment_3(), "rule__Class__ImplementsListAssignment_3");
					put(grammarAccess.getClassAccess().getImplementsListAssignment_4_1(), "rule__Class__ImplementsListAssignment_4_1");
					put(grammarAccess.getClassAccess().getRecordExpressionAssignment_6(), "rule__Class__RecordExpressionAssignment_6");
					put(grammarAccess.getClassAccess().getTraitExpressionAssignment_8(), "rule__Class__TraitExpressionAssignment_8");
					put(grammarAccess.getClassAccess().getConstructorListAssignment_10(), "rule__Class__ConstructorListAssignment_10");
					put(grammarAccess.getProgramAccess().getConstructAssignment_0(), "rule__Program__ConstructAssignment_0");
					put(grammarAccess.getProgramAccess().getNameAssignment_1(), "rule__Program__NameAssignment_1");
					put(grammarAccess.getProgramAccess().getBlockAssignment_3(), "rule__Program__BlockAssignment_3");
					put(grammarAccess.getRecordExpressionAccess().getRecordListAssignment_0(), "rule__RecordExpression__RecordListAssignment_0");
					put(grammarAccess.getRecordExpressionAccess().getRecordListAssignment_1_1(), "rule__RecordExpression__RecordListAssignment_1_1");
					put(grammarAccess.getAnonimousRecordAccess().getDeclarationListAssignment_2(), "rule__AnonimousRecord__DeclarationListAssignment_2");
					put(grammarAccess.getAnonimousRecordAccess().getOperationListAssignment_4_1(), "rule__AnonimousRecord__OperationListAssignment_4_1");
					put(grammarAccess.getAnonimousRecordAccess().getOperationListAssignment_4_2_1(), "rule__AnonimousRecord__OperationListAssignment_4_2_1");
					put(grammarAccess.getRecordNameAccess().getRecordAssignment_0(), "rule__RecordName__RecordAssignment_0");
					put(grammarAccess.getRecordNameAccess().getOperationListAssignment_1_1(), "rule__RecordName__OperationListAssignment_1_1");
					put(grammarAccess.getRecordNameAccess().getOperationListAssignment_1_2_1(), "rule__RecordName__OperationListAssignment_1_2_1");
					put(grammarAccess.getNestedRecordExpressionAccess().getExpressionAssignment_1(), "rule__NestedRecordExpression__ExpressionAssignment_1");
					put(grammarAccess.getNestedRecordExpressionAccess().getOperationListAssignment_3_1(), "rule__NestedRecordExpression__OperationListAssignment_3_1");
					put(grammarAccess.getNestedRecordExpressionAccess().getOperationListAssignment_3_2_1(), "rule__NestedRecordExpression__OperationListAssignment_3_2_1");
					put(grammarAccess.getRecordOperationAccess().getFieldAssignment_0_2(), "rule__RecordOperation__FieldAssignment_0_2");
					put(grammarAccess.getRecordOperationAccess().getOriginalFieldAssignment_1_1(), "rule__RecordOperation__OriginalFieldAssignment_1_1");
					put(grammarAccess.getRecordOperationAccess().getNewFieldAssignment_1_3(), "rule__RecordOperation__NewFieldAssignment_1_3");
					put(grammarAccess.getRecordOperationAccess().getOriginalFieldAssignment_2_1(), "rule__RecordOperation__OriginalFieldAssignment_2_1");
					put(grammarAccess.getRecordOperationAccess().getNewFieldAssignment_2_3(), "rule__RecordOperation__NewFieldAssignment_2_3");
					put(grammarAccess.getTraitExpressionAccess().getTraitListAssignment_0(), "rule__TraitExpression__TraitListAssignment_0");
					put(grammarAccess.getTraitExpressionAccess().getTraitListAssignment_1_1(), "rule__TraitExpression__TraitListAssignment_1_1");
					put(grammarAccess.getAnonimousTraitAccess().getDefinitionListAssignment_2(), "rule__AnonimousTrait__DefinitionListAssignment_2");
					put(grammarAccess.getAnonimousTraitAccess().getOperationListAssignment_4_1(), "rule__AnonimousTrait__OperationListAssignment_4_1");
					put(grammarAccess.getAnonimousTraitAccess().getOperationListAssignment_4_2_1(), "rule__AnonimousTrait__OperationListAssignment_4_2_1");
					put(grammarAccess.getTraitNameAccess().getTraitAssignment_0(), "rule__TraitName__TraitAssignment_0");
					put(grammarAccess.getTraitNameAccess().getOperationListAssignment_1_1(), "rule__TraitName__OperationListAssignment_1_1");
					put(grammarAccess.getTraitNameAccess().getOperationListAssignment_1_2_1(), "rule__TraitName__OperationListAssignment_1_2_1");
					put(grammarAccess.getNestedTraitExpressionAccess().getExpressionAssignment_1(), "rule__NestedTraitExpression__ExpressionAssignment_1");
					put(grammarAccess.getNestedTraitExpressionAccess().getOperationListAssignment_3_1(), "rule__NestedTraitExpression__OperationListAssignment_3_1");
					put(grammarAccess.getNestedTraitExpressionAccess().getOperationListAssignment_3_2_1(), "rule__NestedTraitExpression__OperationListAssignment_3_2_1");
					put(grammarAccess.getTraitOperationAccess().getMethodAssignment_0_2(), "rule__TraitOperation__MethodAssignment_0_2");
					put(grammarAccess.getTraitOperationAccess().getOriginalMethodAssignment_1_1(), "rule__TraitOperation__OriginalMethodAssignment_1_1");
					put(grammarAccess.getTraitOperationAccess().getNewMethodAssignment_1_3(), "rule__TraitOperation__NewMethodAssignment_1_3");
					put(grammarAccess.getTraitOperationAccess().getOriginalMethodAssignment_2_1(), "rule__TraitOperation__OriginalMethodAssignment_2_1");
					put(grammarAccess.getTraitOperationAccess().getNewMethodAssignment_2_3(), "rule__TraitOperation__NewMethodAssignment_2_3");
					put(grammarAccess.getTraitOperationAccess().getOriginalMethodAssignment_3_1(), "rule__TraitOperation__OriginalMethodAssignment_3_1");
					put(grammarAccess.getTraitOperationAccess().getNewMethodAssignment_3_3(), "rule__TraitOperation__NewMethodAssignment_3_3");
					put(grammarAccess.getTraitOperationAccess().getOriginalFieldAssignment_4_1(), "rule__TraitOperation__OriginalFieldAssignment_4_1");
					put(grammarAccess.getTraitOperationAccess().getNewFieldAssignment_4_3(), "rule__TraitOperation__NewFieldAssignment_4_3");
					put(grammarAccess.getTraitOperationAccess().getOriginalFieldAssignment_5_1(), "rule__TraitOperation__OriginalFieldAssignment_5_1");
					put(grammarAccess.getTraitOperationAccess().getNewFieldAssignment_5_3(), "rule__TraitOperation__NewFieldAssignment_5_3");
					put(grammarAccess.getFieldDeclarationAccess().getModifierAssignment_1_0(), "rule__FieldDeclaration__ModifierAssignment_1_0");
					put(grammarAccess.getFieldDeclarationAccess().getModifierAssignment_1_1(), "rule__FieldDeclaration__ModifierAssignment_1_1");
					put(grammarAccess.getFieldDeclarationAccess().getTypeAssignment_2(), "rule__FieldDeclaration__TypeAssignment_2");
					put(grammarAccess.getFieldDeclarationAccess().getFieldRefAssignment_3(), "rule__FieldDeclaration__FieldRefAssignment_3");
					put(grammarAccess.getRequiredFieldAccess().getTypeAssignment_1(), "rule__RequiredField__TypeAssignment_1");
					put(grammarAccess.getRequiredFieldAccess().getFieldRefAssignment_2(), "rule__RequiredField__FieldRefAssignment_2");
					put(grammarAccess.getRequiredMethodAccess().getReturnTypeAssignment_1(), "rule__RequiredMethod__ReturnTypeAssignment_1");
					put(grammarAccess.getRequiredMethodAccess().getMethodRefAssignment_2(), "rule__RequiredMethod__MethodRefAssignment_2");
					put(grammarAccess.getRequiredMethodAccess().getParameterListAssignment_4_0(), "rule__RequiredMethod__ParameterListAssignment_4_0");
					put(grammarAccess.getRequiredMethodAccess().getParameterListAssignment_4_1_1(), "rule__RequiredMethod__ParameterListAssignment_4_1_1");
					put(grammarAccess.getProvidedMethodAccess().getIsSynchronizedAssignment_1(), "rule__ProvidedMethod__IsSynchronizedAssignment_1");
					put(grammarAccess.getProvidedMethodAccess().getReturnTypeAssignment_2(), "rule__ProvidedMethod__ReturnTypeAssignment_2");
					put(grammarAccess.getProvidedMethodAccess().getMethodRefAssignment_3(), "rule__ProvidedMethod__MethodRefAssignment_3");
					put(grammarAccess.getProvidedMethodAccess().getParameterListAssignment_5_0(), "rule__ProvidedMethod__ParameterListAssignment_5_0");
					put(grammarAccess.getProvidedMethodAccess().getParameterListAssignment_5_1_1(), "rule__ProvidedMethod__ParameterListAssignment_5_1_1");
					put(grammarAccess.getProvidedMethodAccess().getBlockAssignment_8(), "rule__ProvidedMethod__BlockAssignment_8");
					put(grammarAccess.getProvidedMethodAccess().getReturnStatementAssignment_9(), "rule__ProvidedMethod__ReturnStatementAssignment_9");
					put(grammarAccess.getConstructorAccess().getNameAssignment_0(), "rule__Constructor__NameAssignment_0");
					put(grammarAccess.getConstructorAccess().getParameterListAssignment_2_0(), "rule__Constructor__ParameterListAssignment_2_0");
					put(grammarAccess.getConstructorAccess().getParameterListAssignment_2_1_1(), "rule__Constructor__ParameterListAssignment_2_1_1");
					put(grammarAccess.getConstructorAccess().getBlockAssignment_5(), "rule__Constructor__BlockAssignment_5");
					put(grammarAccess.getReturnStatementAccess().getExpressionAssignment_1(), "rule__ReturnStatement__ExpressionAssignment_1");
					put(grammarAccess.getParameterAccess().getTypeAssignment_1(), "rule__Parameter__TypeAssignment_1");
					put(grammarAccess.getParameterAccess().getNameAssignment_2(), "rule__Parameter__NameAssignment_2");
					put(grammarAccess.getFieldNameAccess().getNameAssignment(), "rule__FieldName__NameAssignment");
					put(grammarAccess.getMethodNameAccess().getNameAssignment(), "rule__MethodName__NameAssignment");
					put(grammarAccess.getTypeAccess().getInterfaceTypeAssignment_0(), "rule__Type__InterfaceTypeAssignment_0");
					put(grammarAccess.getTypeAccess().getPrimitiveTypeAssignment_1(), "rule__Type__PrimitiveTypeAssignment_1");
					put(grammarAccess.getTypeAccess().getPrimitiveTypeAssignment_2(), "rule__Type__PrimitiveTypeAssignment_2");
					put(grammarAccess.getTypeAccess().getPrimitiveTypeAssignment_3(), "rule__Type__PrimitiveTypeAssignment_3");
					put(grammarAccess.getTypeAccess().getPrimitiveTypeAssignment_4(), "rule__Type__PrimitiveTypeAssignment_4");
					put(grammarAccess.getTypeAccess().getPrimitiveTypeAssignment_5(), "rule__Type__PrimitiveTypeAssignment_5");
					put(grammarAccess.getTypeAccess().getPrimitiveTypeAssignment_6(), "rule__Type__PrimitiveTypeAssignment_6");
					put(grammarAccess.getTypeAccess().getPrimitiveTypeAssignment_7(), "rule__Type__PrimitiveTypeAssignment_7");
					put(grammarAccess.getTypeAccess().getPrimitiveTypeAssignment_8(), "rule__Type__PrimitiveTypeAssignment_8");
					put(grammarAccess.getReturnTypeAccess().getInterfaceTypeAssignment_0(), "rule__ReturnType__InterfaceTypeAssignment_0");
					put(grammarAccess.getReturnTypeAccess().getPrimitiveTypeAssignment_1(), "rule__ReturnType__PrimitiveTypeAssignment_1");
					put(grammarAccess.getReturnTypeAccess().getPrimitiveTypeAssignment_2(), "rule__ReturnType__PrimitiveTypeAssignment_2");
					put(grammarAccess.getReturnTypeAccess().getPrimitiveTypeAssignment_3(), "rule__ReturnType__PrimitiveTypeAssignment_3");
					put(grammarAccess.getReturnTypeAccess().getPrimitiveTypeAssignment_4(), "rule__ReturnType__PrimitiveTypeAssignment_4");
					put(grammarAccess.getReturnTypeAccess().getPrimitiveTypeAssignment_5(), "rule__ReturnType__PrimitiveTypeAssignment_5");
					put(grammarAccess.getReturnTypeAccess().getPrimitiveTypeAssignment_6(), "rule__ReturnType__PrimitiveTypeAssignment_6");
					put(grammarAccess.getReturnTypeAccess().getPrimitiveTypeAssignment_7(), "rule__ReturnType__PrimitiveTypeAssignment_7");
					put(grammarAccess.getReturnTypeAccess().getPrimitiveTypeAssignment_8(), "rule__ReturnType__PrimitiveTypeAssignment_8");
					put(grammarAccess.getReturnTypeAccess().getPrimitiveTypeAssignment_9(), "rule__ReturnType__PrimitiveTypeAssignment_9");
					put(grammarAccess.getBlockAccess().getParameterListAssignment_1(), "rule__Block__ParameterListAssignment_1");
					put(grammarAccess.getBlockAccess().getStatementListAssignment_2(), "rule__Block__StatementListAssignment_2");
					put(grammarAccess.getExpressionStatementAccess().getExpressionAssignment_0(), "rule__ExpressionStatement__ExpressionAssignment_0");
					put(grammarAccess.getIfThenElseStatementAccess().getCondictionAssignment_2(), "rule__IfThenElseStatement__CondictionAssignment_2");
					put(grammarAccess.getIfThenElseStatementAccess().getTrueBranchAssignment_5(), "rule__IfThenElseStatement__TrueBranchAssignment_5");
					put(grammarAccess.getIfThenElseStatementAccess().getFalseBranchAssignment_7_2(), "rule__IfThenElseStatement__FalseBranchAssignment_7_2");
					put(grammarAccess.getWhileStatementAccess().getCondictionAssignment_2(), "rule__WhileStatement__CondictionAssignment_2");
					put(grammarAccess.getWhileStatementAccess().getWhileBlockAssignment_5(), "rule__WhileStatement__WhileBlockAssignment_5");
					put(grammarAccess.getBooleanExpressionAccess().getAtomicListAssignment_1(), "rule__BooleanExpression__AtomicListAssignment_1");
					put(grammarAccess.getBooleanExpressionAccess().getBooleanOperatorListAssignment_2_0(), "rule__BooleanExpression__BooleanOperatorListAssignment_2_0");
					put(grammarAccess.getBooleanExpressionAccess().getAtomicListAssignment_2_1(), "rule__BooleanExpression__AtomicListAssignment_2_1");
					put(grammarAccess.getBooleanOperatorAccess().getOperatorAssignment_0(), "rule__BooleanOperator__OperatorAssignment_0");
					put(grammarAccess.getBooleanOperatorAccess().getOperatorAssignment_1(), "rule__BooleanOperator__OperatorAssignment_1");
					put(grammarAccess.getBooleanOperatorAccess().getOperatorAssignment_2(), "rule__BooleanOperator__OperatorAssignment_2");
					put(grammarAccess.getBooleanOperatorAccess().getOperatorAssignment_3(), "rule__BooleanOperator__OperatorAssignment_3");
					put(grammarAccess.getBooleanOperatorAccess().getOperatorAssignment_4(), "rule__BooleanOperator__OperatorAssignment_4");
					put(grammarAccess.getSimpleComparationAccess().getNegatedAssignment_0(), "rule__SimpleComparation__NegatedAssignment_0");
					put(grammarAccess.getSimpleComparationAccess().getLeftExpressionAssignment_1(), "rule__SimpleComparation__LeftExpressionAssignment_1");
					put(grammarAccess.getSimpleComparationAccess().getCompareAssignment_2_0(), "rule__SimpleComparation__CompareAssignment_2_0");
					put(grammarAccess.getSimpleComparationAccess().getRightExpressionAssignment_2_1(), "rule__SimpleComparation__RightExpressionAssignment_2_1");
					put(grammarAccess.getNestedBooleanExpressionAccess().getNegatedAssignment_0(), "rule__NestedBooleanExpression__NegatedAssignment_0");
					put(grammarAccess.getNestedBooleanExpressionAccess().getNestedExpressionAssignment_2(), "rule__NestedBooleanExpression__NestedExpressionAssignment_2");
					put(grammarAccess.getCompareOperatorAccess().getOperatorAssignment_0(), "rule__CompareOperator__OperatorAssignment_0");
					put(grammarAccess.getCompareOperatorAccess().getOperatorAssignment_1(), "rule__CompareOperator__OperatorAssignment_1");
					put(grammarAccess.getCompareOperatorAccess().getOperatorAssignment_2(), "rule__CompareOperator__OperatorAssignment_2");
					put(grammarAccess.getCompareOperatorAccess().getOperatorAssignment_3(), "rule__CompareOperator__OperatorAssignment_3");
					put(grammarAccess.getCompareOperatorAccess().getOperatorAssignment_4(), "rule__CompareOperator__OperatorAssignment_4");
					put(grammarAccess.getCompareOperatorAccess().getOperatorAssignment_5(), "rule__CompareOperator__OperatorAssignment_5");
					put(grammarAccess.getLocalParameterAccess().getTypeAssignment_0_1(), "rule__LocalParameter__TypeAssignment_0_1");
					put(grammarAccess.getLocalParameterAccess().getNameAssignment_0_2(), "rule__LocalParameter__NameAssignment_0_2");
					put(grammarAccess.getLocalParameterAccess().getValueAssignment_0_4(), "rule__LocalParameter__ValueAssignment_0_4");
					put(grammarAccess.getLocalParameterAccess().getTypeAssignment_1_1(), "rule__LocalParameter__TypeAssignment_1_1");
					put(grammarAccess.getLocalParameterAccess().getNameAssignment_1_2(), "rule__LocalParameter__NameAssignment_1_2");
					put(grammarAccess.getLocalParameterAccess().getValueAssignment_1_4(), "rule__LocalParameter__ValueAssignment_1_4");
					put(grammarAccess.getExpressionAccess().getSignAssignment_1_0(), "rule__Expression__SignAssignment_1_0");
					put(grammarAccess.getExpressionAccess().getSignAssignment_1_1(), "rule__Expression__SignAssignment_1_1");
					put(grammarAccess.getExpressionAccess().getTermListAssignment_2(), "rule__Expression__TermListAssignment_2");
					put(grammarAccess.getExpressionAccess().getOperatorListAssignment_3_0(), "rule__Expression__OperatorListAssignment_3_0");
					put(grammarAccess.getExpressionAccess().getTermListAssignment_3_1(), "rule__Expression__TermListAssignment_3_1");
					put(grammarAccess.getDottedExpressionAccess().getStartAssignment_0(), "rule__DottedExpression__StartAssignment_0");
					put(grammarAccess.getDottedExpressionAccess().getMessageAssignment_1_2(), "rule__DottedExpression__MessageAssignment_1_2");
					put(grammarAccess.getDottedExpressionAccess().getMessageAssignment_2_2(), "rule__DottedExpression__MessageAssignment_2_2");
					put(grammarAccess.getDottedExpressionAccess().getValueAssignment_2_3_1_0(), "rule__DottedExpression__ValueAssignment_2_3_1_0");
					put(grammarAccess.getDottedExpressionAccess().getValueAssignment_2_3_1_1(), "rule__DottedExpression__ValueAssignment_2_3_1_1");
					put(grammarAccess.getNullAccess().getNullAssignment(), "rule__Null__NullAssignment");
					put(grammarAccess.getInputAccess().getInputAssignment(), "rule__Input__InputAssignment");
					put(grammarAccess.getArgsAccess().getArgsAssignment(), "rule__Args__ArgsAssignment");
					put(grammarAccess.getOutputAccess().getOutputAssignment(), "rule__Output__OutputAssignment");
					put(grammarAccess.getBooleanConstantAccess().getValueAssignment_0(), "rule__BooleanConstant__ValueAssignment_0");
					put(grammarAccess.getBooleanConstantAccess().getValueAssignment_1(), "rule__BooleanConstant__ValueAssignment_1");
					put(grammarAccess.getNumberAccess().getValueAssignment(), "rule__Number__ValueAssignment");
					put(grammarAccess.getStringConstantAccess().getValueAssignment(), "rule__StringConstant__ValueAssignment");
					put(grammarAccess.getThisAccess().getThisAssignment(), "rule__This__ThisAssignment");
					put(grammarAccess.getParameterReferenceAccess().getParameterAssignment(), "rule__ParameterReference__ParameterAssignment");
					put(grammarAccess.getConstructorInvocationAccess().getClassRefAssignment_1(), "rule__ConstructorInvocation__ClassRefAssignment_1");
					put(grammarAccess.getConstructorInvocationAccess().getArgumentListAssignment_3_0_0_0(), "rule__ConstructorInvocation__ArgumentListAssignment_3_0_0_0");
					put(grammarAccess.getConstructorInvocationAccess().getArgumentListAssignment_3_0_0_1(), "rule__ConstructorInvocation__ArgumentListAssignment_3_0_0_1");
					put(grammarAccess.getConstructorInvocationAccess().getArgumentListAssignment_3_1_0(), "rule__ConstructorInvocation__ArgumentListAssignment_3_1_0");
					put(grammarAccess.getConstructorInvocationAccess().getArgumentListAssignment_3_1_1(), "rule__ConstructorInvocation__ArgumentListAssignment_3_1_1");
					put(grammarAccess.getCastAccess().getTypeAssignment_1(), "rule__Cast__TypeAssignment_1");
					put(grammarAccess.getCastAccess().getStartAssignment_3(), "rule__Cast__StartAssignment_3");
					put(grammarAccess.getNestedExpressionAccess().getExpressionAssignment_1(), "rule__NestedExpression__ExpressionAssignment_1");
					put(grammarAccess.getMethodInvocationAccess().getMethodAssignment_0(), "rule__MethodInvocation__MethodAssignment_0");
					put(grammarAccess.getMethodInvocationAccess().getArgumentListAssignment_2_0_0(), "rule__MethodInvocation__ArgumentListAssignment_2_0_0");
					put(grammarAccess.getMethodInvocationAccess().getArgumentListAssignment_2_0_1(), "rule__MethodInvocation__ArgumentListAssignment_2_0_1");
					put(grammarAccess.getMethodInvocationAccess().getArgumentListAssignment_2_1_1_0(), "rule__MethodInvocation__ArgumentListAssignment_2_1_1_0");
					put(grammarAccess.getMethodInvocationAccess().getArgumentListAssignment_2_1_1_1(), "rule__MethodInvocation__ArgumentListAssignment_2_1_1_1");
					put(grammarAccess.getFieldAccessAccess().getFieldAssignment(), "rule__FieldAccess__FieldAssignment");
					put(grammarAccess.getParameterAssignmentAccess().getParameterAssignment_0(), "rule__ParameterAssignment__ParameterAssignment_0");
					put(grammarAccess.getParameterAssignmentAccess().getValueAssignment_2_0(), "rule__ParameterAssignment__ValueAssignment_2_0");
					put(grammarAccess.getParameterAssignmentAccess().getValueAssignment_2_1(), "rule__ParameterAssignment__ValueAssignment_2_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.xtext.example.ui.contentassist.antlr.internal.InternalSwrtjParser typedParser = (org.xtext.example.ui.contentassist.antlr.internal.InternalSwrtjParser) parser;
			typedParser.entryRuleFile();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public SwrtjGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(SwrtjGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
