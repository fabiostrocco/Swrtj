/*
* generated by Xtext
*/
grammar InternalSwrtj;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package org.xtext.example.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.services.SwrtjGrammarAccess;

}

@parser::members {
 
 	private SwrtjGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(SwrtjGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleFile
entryRuleFile 
:
{ before(grammarAccess.getFileRule()); }
	 ruleFile
{ after(grammarAccess.getFileRule()); } 
	 EOF 
;

// Rule File
ruleFile
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFileAccess().getGroup()); }
(rule__File__Group__0)
{ after(grammarAccess.getFileAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleElement
entryRuleElement 
:
{ before(grammarAccess.getElementRule()); }
	 ruleElement
{ after(grammarAccess.getElementRule()); } 
	 EOF 
;

// Rule Element
ruleElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getElementAccess().getAlternatives()); }
(rule__Element__Alternatives)
{ after(grammarAccess.getElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInterface
entryRuleInterface 
:
{ before(grammarAccess.getInterfaceRule()); }
	 ruleInterface
{ after(grammarAccess.getInterfaceRule()); } 
	 EOF 
;

// Rule Interface
ruleInterface
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInterfaceAccess().getGroup()); }
(rule__Interface__Group__0)
{ after(grammarAccess.getInterfaceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRecord
entryRuleRecord 
:
{ before(grammarAccess.getRecordRule()); }
	 ruleRecord
{ after(grammarAccess.getRecordRule()); } 
	 EOF 
;

// Rule Record
ruleRecord
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRecordAccess().getGroup()); }
(rule__Record__Group__0)
{ after(grammarAccess.getRecordAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTrait
entryRuleTrait 
:
{ before(grammarAccess.getTraitRule()); }
	 ruleTrait
{ after(grammarAccess.getTraitRule()); } 
	 EOF 
;

// Rule Trait
ruleTrait
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTraitAccess().getGroup()); }
(rule__Trait__Group__0)
{ after(grammarAccess.getTraitAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClass
entryRuleClass 
:
{ before(grammarAccess.getClassRule()); }
	 ruleClass
{ after(grammarAccess.getClassRule()); } 
	 EOF 
;

// Rule Class
ruleClass
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassAccess().getGroup()); }
(rule__Class__Group__0)
{ after(grammarAccess.getClassAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProgram
entryRuleProgram 
:
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule Program
ruleProgram
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProgramAccess().getGroup()); }
(rule__Program__Group__0)
{ after(grammarAccess.getProgramAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRecordExpression
entryRuleRecordExpression 
:
{ before(grammarAccess.getRecordExpressionRule()); }
	 ruleRecordExpression
{ after(grammarAccess.getRecordExpressionRule()); } 
	 EOF 
;

// Rule RecordExpression
ruleRecordExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRecordExpressionAccess().getGroup()); }
(rule__RecordExpression__Group__0)
{ after(grammarAccess.getRecordExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBaseRecord
entryRuleBaseRecord 
:
{ before(grammarAccess.getBaseRecordRule()); }
	 ruleBaseRecord
{ after(grammarAccess.getBaseRecordRule()); } 
	 EOF 
;

// Rule BaseRecord
ruleBaseRecord
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBaseRecordAccess().getAlternatives()); }
(rule__BaseRecord__Alternatives)
{ after(grammarAccess.getBaseRecordAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnonimousRecord
entryRuleAnonimousRecord 
:
{ before(grammarAccess.getAnonimousRecordRule()); }
	 ruleAnonimousRecord
{ after(grammarAccess.getAnonimousRecordRule()); } 
	 EOF 
;

// Rule AnonimousRecord
ruleAnonimousRecord
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnonimousRecordAccess().getGroup()); }
(rule__AnonimousRecord__Group__0)
{ after(grammarAccess.getAnonimousRecordAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRecordName
entryRuleRecordName 
:
{ before(grammarAccess.getRecordNameRule()); }
	 ruleRecordName
{ after(grammarAccess.getRecordNameRule()); } 
	 EOF 
;

// Rule RecordName
ruleRecordName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRecordNameAccess().getGroup()); }
(rule__RecordName__Group__0)
{ after(grammarAccess.getRecordNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNestedRecordExpression
entryRuleNestedRecordExpression 
:
{ before(grammarAccess.getNestedRecordExpressionRule()); }
	 ruleNestedRecordExpression
{ after(grammarAccess.getNestedRecordExpressionRule()); } 
	 EOF 
;

// Rule NestedRecordExpression
ruleNestedRecordExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNestedRecordExpressionAccess().getGroup()); }
(rule__NestedRecordExpression__Group__0)
{ after(grammarAccess.getNestedRecordExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRecordOperation
entryRuleRecordOperation 
:
{ before(grammarAccess.getRecordOperationRule()); }
	 ruleRecordOperation
{ after(grammarAccess.getRecordOperationRule()); } 
	 EOF 
;

// Rule RecordOperation
ruleRecordOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRecordOperationAccess().getAlternatives()); }
(rule__RecordOperation__Alternatives)
{ after(grammarAccess.getRecordOperationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTraitExpression
entryRuleTraitExpression 
:
{ before(grammarAccess.getTraitExpressionRule()); }
	 ruleTraitExpression
{ after(grammarAccess.getTraitExpressionRule()); } 
	 EOF 
;

// Rule TraitExpression
ruleTraitExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTraitExpressionAccess().getGroup()); }
(rule__TraitExpression__Group__0)
{ after(grammarAccess.getTraitExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBaseTrait
entryRuleBaseTrait 
:
{ before(grammarAccess.getBaseTraitRule()); }
	 ruleBaseTrait
{ after(grammarAccess.getBaseTraitRule()); } 
	 EOF 
;

// Rule BaseTrait
ruleBaseTrait
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBaseTraitAccess().getAlternatives()); }
(rule__BaseTrait__Alternatives)
{ after(grammarAccess.getBaseTraitAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnonimousTrait
entryRuleAnonimousTrait 
:
{ before(grammarAccess.getAnonimousTraitRule()); }
	 ruleAnonimousTrait
{ after(grammarAccess.getAnonimousTraitRule()); } 
	 EOF 
;

// Rule AnonimousTrait
ruleAnonimousTrait
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnonimousTraitAccess().getGroup()); }
(rule__AnonimousTrait__Group__0)
{ after(grammarAccess.getAnonimousTraitAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTraitName
entryRuleTraitName 
:
{ before(grammarAccess.getTraitNameRule()); }
	 ruleTraitName
{ after(grammarAccess.getTraitNameRule()); } 
	 EOF 
;

// Rule TraitName
ruleTraitName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTraitNameAccess().getGroup()); }
(rule__TraitName__Group__0)
{ after(grammarAccess.getTraitNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNestedTraitExpression
entryRuleNestedTraitExpression 
:
{ before(grammarAccess.getNestedTraitExpressionRule()); }
	 ruleNestedTraitExpression
{ after(grammarAccess.getNestedTraitExpressionRule()); } 
	 EOF 
;

// Rule NestedTraitExpression
ruleNestedTraitExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNestedTraitExpressionAccess().getGroup()); }
(rule__NestedTraitExpression__Group__0)
{ after(grammarAccess.getNestedTraitExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTraitOperation
entryRuleTraitOperation 
:
{ before(grammarAccess.getTraitOperationRule()); }
	 ruleTraitOperation
{ after(grammarAccess.getTraitOperationRule()); } 
	 EOF 
;

// Rule TraitOperation
ruleTraitOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTraitOperationAccess().getAlternatives()); }
(rule__TraitOperation__Alternatives)
{ after(grammarAccess.getTraitOperationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTraitElement
entryRuleTraitElement 
:
{ before(grammarAccess.getTraitElementRule()); }
	 ruleTraitElement
{ after(grammarAccess.getTraitElementRule()); } 
	 EOF 
;

// Rule TraitElement
ruleTraitElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTraitElementAccess().getAlternatives()); }
(rule__TraitElement__Alternatives)
{ after(grammarAccess.getTraitElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFieldDeclaration
entryRuleFieldDeclaration 
:
{ before(grammarAccess.getFieldDeclarationRule()); }
	 ruleFieldDeclaration
{ after(grammarAccess.getFieldDeclarationRule()); } 
	 EOF 
;

// Rule FieldDeclaration
ruleFieldDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFieldDeclarationAccess().getGroup()); }
(rule__FieldDeclaration__Group__0)
{ after(grammarAccess.getFieldDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRequiredField
entryRuleRequiredField 
:
{ before(grammarAccess.getRequiredFieldRule()); }
	 ruleRequiredField
{ after(grammarAccess.getRequiredFieldRule()); } 
	 EOF 
;

// Rule RequiredField
ruleRequiredField
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRequiredFieldAccess().getGroup()); }
(rule__RequiredField__Group__0)
{ after(grammarAccess.getRequiredFieldAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRequiredMethod
entryRuleRequiredMethod 
:
{ before(grammarAccess.getRequiredMethodRule()); }
	 ruleRequiredMethod
{ after(grammarAccess.getRequiredMethodRule()); } 
	 EOF 
;

// Rule RequiredMethod
ruleRequiredMethod
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRequiredMethodAccess().getGroup()); }
(rule__RequiredMethod__Group__0)
{ after(grammarAccess.getRequiredMethodAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProvidedMethod
entryRuleProvidedMethod 
:
{ before(grammarAccess.getProvidedMethodRule()); }
	 ruleProvidedMethod
{ after(grammarAccess.getProvidedMethodRule()); } 
	 EOF 
;

// Rule ProvidedMethod
ruleProvidedMethod
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProvidedMethodAccess().getGroup()); }
(rule__ProvidedMethod__Group__0)
{ after(grammarAccess.getProvidedMethodAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstructor
entryRuleConstructor 
:
{ before(grammarAccess.getConstructorRule()); }
	 ruleConstructor
{ after(grammarAccess.getConstructorRule()); } 
	 EOF 
;

// Rule Constructor
ruleConstructor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstructorAccess().getGroup()); }
(rule__Constructor__Group__0)
{ after(grammarAccess.getConstructorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReturnStatement
entryRuleReturnStatement 
:
{ before(grammarAccess.getReturnStatementRule()); }
	 ruleReturnStatement
{ after(grammarAccess.getReturnStatementRule()); } 
	 EOF 
;

// Rule ReturnStatement
ruleReturnStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReturnStatementAccess().getGroup()); }
(rule__ReturnStatement__Group__0)
{ after(grammarAccess.getReturnStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameter
entryRuleParameter 
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterAccess().getGroup()); }
(rule__Parameter__Group__0)
{ after(grammarAccess.getParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFieldName
entryRuleFieldName 
:
{ before(grammarAccess.getFieldNameRule()); }
	 ruleFieldName
{ after(grammarAccess.getFieldNameRule()); } 
	 EOF 
;

// Rule FieldName
ruleFieldName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFieldNameAccess().getNameAssignment()); }
(rule__FieldName__NameAssignment)
{ after(grammarAccess.getFieldNameAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMethodName
entryRuleMethodName 
:
{ before(grammarAccess.getMethodNameRule()); }
	 ruleMethodName
{ after(grammarAccess.getMethodNameRule()); } 
	 EOF 
;

// Rule MethodName
ruleMethodName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMethodNameAccess().getNameAssignment()); }
(rule__MethodName__NameAssignment)
{ after(grammarAccess.getMethodNameAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType 
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getAlternatives()); }
(rule__Type__Alternatives)
{ after(grammarAccess.getTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReturnType
entryRuleReturnType 
:
{ before(grammarAccess.getReturnTypeRule()); }
	 ruleReturnType
{ after(grammarAccess.getReturnTypeRule()); } 
	 EOF 
;

// Rule ReturnType
ruleReturnType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReturnTypeAccess().getAlternatives()); }
(rule__ReturnType__Alternatives)
{ after(grammarAccess.getReturnTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBlock
entryRuleBlock 
:
{ before(grammarAccess.getBlockRule()); }
	 ruleBlock
{ after(grammarAccess.getBlockRule()); } 
	 EOF 
;

// Rule Block
ruleBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBlockAccess().getGroup()); }
(rule__Block__Group__0)
{ after(grammarAccess.getBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatement
entryRuleStatement 
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementAccess().getAlternatives()); }
(rule__Statement__Alternatives)
{ after(grammarAccess.getStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionStatement
entryRuleExpressionStatement 
:
{ before(grammarAccess.getExpressionStatementRule()); }
	 ruleExpressionStatement
{ after(grammarAccess.getExpressionStatementRule()); } 
	 EOF 
;

// Rule ExpressionStatement
ruleExpressionStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionStatementAccess().getGroup()); }
(rule__ExpressionStatement__Group__0)
{ after(grammarAccess.getExpressionStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIfThenElseStatement
entryRuleIfThenElseStatement 
:
{ before(grammarAccess.getIfThenElseStatementRule()); }
	 ruleIfThenElseStatement
{ after(grammarAccess.getIfThenElseStatementRule()); } 
	 EOF 
;

// Rule IfThenElseStatement
ruleIfThenElseStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIfThenElseStatementAccess().getGroup()); }
(rule__IfThenElseStatement__Group__0)
{ after(grammarAccess.getIfThenElseStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWhileStatement
entryRuleWhileStatement 
:
{ before(grammarAccess.getWhileStatementRule()); }
	 ruleWhileStatement
{ after(grammarAccess.getWhileStatementRule()); } 
	 EOF 
;

// Rule WhileStatement
ruleWhileStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWhileStatementAccess().getGroup()); }
(rule__WhileStatement__Group__0)
{ after(grammarAccess.getWhileStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanExpression
entryRuleBooleanExpression 
:
{ before(grammarAccess.getBooleanExpressionRule()); }
	 ruleBooleanExpression
{ after(grammarAccess.getBooleanExpressionRule()); } 
	 EOF 
;

// Rule BooleanExpression
ruleBooleanExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanExpressionAccess().getGroup()); }
(rule__BooleanExpression__Group__0)
{ after(grammarAccess.getBooleanExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanOperator
entryRuleBooleanOperator 
:
{ before(grammarAccess.getBooleanOperatorRule()); }
	 ruleBooleanOperator
{ after(grammarAccess.getBooleanOperatorRule()); } 
	 EOF 
;

// Rule BooleanOperator
ruleBooleanOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanOperatorAccess().getAlternatives()); }
(rule__BooleanOperator__Alternatives)
{ after(grammarAccess.getBooleanOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAtomicBooleanExpression
entryRuleAtomicBooleanExpression 
:
{ before(grammarAccess.getAtomicBooleanExpressionRule()); }
	 ruleAtomicBooleanExpression
{ after(grammarAccess.getAtomicBooleanExpressionRule()); } 
	 EOF 
;

// Rule AtomicBooleanExpression
ruleAtomicBooleanExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAtomicBooleanExpressionAccess().getAlternatives()); }
(rule__AtomicBooleanExpression__Alternatives)
{ after(grammarAccess.getAtomicBooleanExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSimpleComparation
entryRuleSimpleComparation 
:
{ before(grammarAccess.getSimpleComparationRule()); }
	 ruleSimpleComparation
{ after(grammarAccess.getSimpleComparationRule()); } 
	 EOF 
;

// Rule SimpleComparation
ruleSimpleComparation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimpleComparationAccess().getGroup()); }
(rule__SimpleComparation__Group__0)
{ after(grammarAccess.getSimpleComparationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNestedBooleanExpression
entryRuleNestedBooleanExpression 
:
{ before(grammarAccess.getNestedBooleanExpressionRule()); }
	 ruleNestedBooleanExpression
{ after(grammarAccess.getNestedBooleanExpressionRule()); } 
	 EOF 
;

// Rule NestedBooleanExpression
ruleNestedBooleanExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNestedBooleanExpressionAccess().getGroup()); }
(rule__NestedBooleanExpression__Group__0)
{ after(grammarAccess.getNestedBooleanExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCompareOperator
entryRuleCompareOperator 
:
{ before(grammarAccess.getCompareOperatorRule()); }
	 ruleCompareOperator
{ after(grammarAccess.getCompareOperatorRule()); } 
	 EOF 
;

// Rule CompareOperator
ruleCompareOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCompareOperatorAccess().getAlternatives()); }
(rule__CompareOperator__Alternatives)
{ after(grammarAccess.getCompareOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLocalParameter
entryRuleLocalParameter 
:
{ before(grammarAccess.getLocalParameterRule()); }
	 ruleLocalParameter
{ after(grammarAccess.getLocalParameterRule()); } 
	 EOF 
;

// Rule LocalParameter
ruleLocalParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLocalParameterAccess().getAlternatives()); }
(rule__LocalParameter__Alternatives)
{ after(grammarAccess.getLocalParameterAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getGroup()); }
(rule__Expression__Group__0)
{ after(grammarAccess.getExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDottedExpression
entryRuleDottedExpression 
:
{ before(grammarAccess.getDottedExpressionRule()); }
	 ruleDottedExpression
{ after(grammarAccess.getDottedExpressionRule()); } 
	 EOF 
;

// Rule DottedExpression
ruleDottedExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDottedExpressionAccess().getGroup()); }
(rule__DottedExpression__Group__0)
{ after(grammarAccess.getDottedExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStart
entryRuleStart 
:
{ before(grammarAccess.getStartRule()); }
	 ruleStart
{ after(grammarAccess.getStartRule()); } 
	 EOF 
;

// Rule Start
ruleStart
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStartAccess().getAlternatives()); }
(rule__Start__Alternatives)
{ after(grammarAccess.getStartAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNull
entryRuleNull 
:
{ before(grammarAccess.getNullRule()); }
	 ruleNull
{ after(grammarAccess.getNullRule()); } 
	 EOF 
;

// Rule Null
ruleNull
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNullAccess().getNullAssignment()); }
(rule__Null__NullAssignment)
{ after(grammarAccess.getNullAccess().getNullAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInput
entryRuleInput 
:
{ before(grammarAccess.getInputRule()); }
	 ruleInput
{ after(grammarAccess.getInputRule()); } 
	 EOF 
;

// Rule Input
ruleInput
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInputAccess().getInputAssignment()); }
(rule__Input__InputAssignment)
{ after(grammarAccess.getInputAccess().getInputAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArgs
entryRuleArgs 
:
{ before(grammarAccess.getArgsRule()); }
	 ruleArgs
{ after(grammarAccess.getArgsRule()); } 
	 EOF 
;

// Rule Args
ruleArgs
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArgsAccess().getArgsAssignment()); }
(rule__Args__ArgsAssignment)
{ after(grammarAccess.getArgsAccess().getArgsAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOutput
entryRuleOutput 
:
{ before(grammarAccess.getOutputRule()); }
	 ruleOutput
{ after(grammarAccess.getOutputRule()); } 
	 EOF 
;

// Rule Output
ruleOutput
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOutputAccess().getOutputAssignment()); }
(rule__Output__OutputAssignment)
{ after(grammarAccess.getOutputAccess().getOutputAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanConstant
entryRuleBooleanConstant 
:
{ before(grammarAccess.getBooleanConstantRule()); }
	 ruleBooleanConstant
{ after(grammarAccess.getBooleanConstantRule()); } 
	 EOF 
;

// Rule BooleanConstant
ruleBooleanConstant
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanConstantAccess().getAlternatives()); }
(rule__BooleanConstant__Alternatives)
{ after(grammarAccess.getBooleanConstantAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumber
entryRuleNumber 
:
{ before(grammarAccess.getNumberRule()); }
	 ruleNumber
{ after(grammarAccess.getNumberRule()); } 
	 EOF 
;

// Rule Number
ruleNumber
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumberAccess().getValueAssignment()); }
(rule__Number__ValueAssignment)
{ after(grammarAccess.getNumberAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringConstant
entryRuleStringConstant 
:
{ before(grammarAccess.getStringConstantRule()); }
	 ruleStringConstant
{ after(grammarAccess.getStringConstantRule()); } 
	 EOF 
;

// Rule StringConstant
ruleStringConstant
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringConstantAccess().getValueAssignment()); }
(rule__StringConstant__ValueAssignment)
{ after(grammarAccess.getStringConstantAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleThis
entryRuleThis 
:
{ before(grammarAccess.getThisRule()); }
	 ruleThis
{ after(grammarAccess.getThisRule()); } 
	 EOF 
;

// Rule This
ruleThis
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getThisAccess().getThisAssignment()); }
(rule__This__ThisAssignment)
{ after(grammarAccess.getThisAccess().getThisAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameterReference
entryRuleParameterReference 
:
{ before(grammarAccess.getParameterReferenceRule()); }
	 ruleParameterReference
{ after(grammarAccess.getParameterReferenceRule()); } 
	 EOF 
;

// Rule ParameterReference
ruleParameterReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterReferenceAccess().getParameterAssignment()); }
(rule__ParameterReference__ParameterAssignment)
{ after(grammarAccess.getParameterReferenceAccess().getParameterAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstructorInvocation
entryRuleConstructorInvocation 
:
{ before(grammarAccess.getConstructorInvocationRule()); }
	 ruleConstructorInvocation
{ after(grammarAccess.getConstructorInvocationRule()); } 
	 EOF 
;

// Rule ConstructorInvocation
ruleConstructorInvocation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstructorInvocationAccess().getGroup()); }
(rule__ConstructorInvocation__Group__0)
{ after(grammarAccess.getConstructorInvocationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCast
entryRuleCast 
:
{ before(grammarAccess.getCastRule()); }
	 ruleCast
{ after(grammarAccess.getCastRule()); } 
	 EOF 
;

// Rule Cast
ruleCast
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCastAccess().getGroup()); }
(rule__Cast__Group__0)
{ after(grammarAccess.getCastAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNestedExpression
entryRuleNestedExpression 
:
{ before(grammarAccess.getNestedExpressionRule()); }
	 ruleNestedExpression
{ after(grammarAccess.getNestedExpressionRule()); } 
	 EOF 
;

// Rule NestedExpression
ruleNestedExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNestedExpressionAccess().getGroup()); }
(rule__NestedExpression__Group__0)
{ after(grammarAccess.getNestedExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMessage
entryRuleMessage 
:
{ before(grammarAccess.getMessageRule()); }
	 ruleMessage
{ after(grammarAccess.getMessageRule()); } 
	 EOF 
;

// Rule Message
ruleMessage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMessageAccess().getAlternatives()); }
(rule__Message__Alternatives)
{ after(grammarAccess.getMessageAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMethodInvocation
entryRuleMethodInvocation 
:
{ before(grammarAccess.getMethodInvocationRule()); }
	 ruleMethodInvocation
{ after(grammarAccess.getMethodInvocationRule()); } 
	 EOF 
;

// Rule MethodInvocation
ruleMethodInvocation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMethodInvocationAccess().getGroup()); }
(rule__MethodInvocation__Group__0)
{ after(grammarAccess.getMethodInvocationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFieldAccess
entryRuleFieldAccess 
:
{ before(grammarAccess.getFieldAccessRule()); }
	 ruleFieldAccess
{ after(grammarAccess.getFieldAccessRule()); } 
	 EOF 
;

// Rule FieldAccess
ruleFieldAccess
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFieldAccessAccess().getFieldAssignment()); }
(rule__FieldAccess__FieldAssignment)
{ after(grammarAccess.getFieldAccessAccess().getFieldAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameterAssignment
entryRuleParameterAssignment 
:
{ before(grammarAccess.getParameterAssignmentRule()); }
	 ruleParameterAssignment
{ after(grammarAccess.getParameterAssignmentRule()); } 
	 EOF 
;

// Rule ParameterAssignment
ruleParameterAssignment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterAssignmentAccess().getGroup()); }
(rule__ParameterAssignment__Group__0)
{ after(grammarAccess.getParameterAssignmentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Element__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementAccess().getInterfaceParserRuleCall_0()); }
	ruleInterface
{ after(grammarAccess.getElementAccess().getInterfaceParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getElementAccess().getRecordParserRuleCall_1()); }
	ruleRecord
{ after(grammarAccess.getElementAccess().getRecordParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getElementAccess().getTraitParserRuleCall_2()); }
	ruleTrait
{ after(grammarAccess.getElementAccess().getTraitParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getElementAccess().getClassParserRuleCall_3()); }
	ruleClass
{ after(grammarAccess.getElementAccess().getClassParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getElementAccess().getProgramParserRuleCall_4()); }
	ruleProgram
{ after(grammarAccess.getElementAccess().getProgramParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BaseRecord__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBaseRecordAccess().getAnonimousRecordParserRuleCall_0()); }
	ruleAnonimousRecord
{ after(grammarAccess.getBaseRecordAccess().getAnonimousRecordParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getBaseRecordAccess().getRecordNameParserRuleCall_1()); }
	ruleRecordName
{ after(grammarAccess.getBaseRecordAccess().getRecordNameParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getBaseRecordAccess().getNestedRecordExpressionParserRuleCall_2()); }
	ruleNestedRecordExpression
{ after(grammarAccess.getBaseRecordAccess().getNestedRecordExpressionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordOperation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordOperationAccess().getGroup_0()); }
(rule__RecordOperation__Group_0__0)
{ after(grammarAccess.getRecordOperationAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getRecordOperationAccess().getGroup_1()); }
(rule__RecordOperation__Group_1__0)
{ after(grammarAccess.getRecordOperationAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getRecordOperationAccess().getGroup_2()); }
(rule__RecordOperation__Group_2__0)
{ after(grammarAccess.getRecordOperationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BaseTrait__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBaseTraitAccess().getAnonimousTraitParserRuleCall_0()); }
	ruleAnonimousTrait
{ after(grammarAccess.getBaseTraitAccess().getAnonimousTraitParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getBaseTraitAccess().getTraitNameParserRuleCall_1()); }
	ruleTraitName
{ after(grammarAccess.getBaseTraitAccess().getTraitNameParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getBaseTraitAccess().getNestedTraitExpressionParserRuleCall_2()); }
	ruleNestedTraitExpression
{ after(grammarAccess.getBaseTraitAccess().getNestedTraitExpressionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TraitOperation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitOperationAccess().getGroup_0()); }
(rule__TraitOperation__Group_0__0)
{ after(grammarAccess.getTraitOperationAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getTraitOperationAccess().getGroup_1()); }
(rule__TraitOperation__Group_1__0)
{ after(grammarAccess.getTraitOperationAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getTraitOperationAccess().getGroup_2()); }
(rule__TraitOperation__Group_2__0)
{ after(grammarAccess.getTraitOperationAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getTraitOperationAccess().getGroup_3()); }
(rule__TraitOperation__Group_3__0)
{ after(grammarAccess.getTraitOperationAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getTraitOperationAccess().getGroup_4()); }
(rule__TraitOperation__Group_4__0)
{ after(grammarAccess.getTraitOperationAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getTraitOperationAccess().getGroup_5()); }
(rule__TraitOperation__Group_5__0)
{ after(grammarAccess.getTraitOperationAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TraitElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitElementAccess().getRequiredFieldParserRuleCall_0()); }
	ruleRequiredField
{ after(grammarAccess.getTraitElementAccess().getRequiredFieldParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTraitElementAccess().getRequiredMethodParserRuleCall_1()); }
	ruleRequiredMethod
{ after(grammarAccess.getTraitElementAccess().getRequiredMethodParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTraitElementAccess().getProvidedMethodParserRuleCall_2()); }
	ruleProvidedMethod
{ after(grammarAccess.getTraitElementAccess().getProvidedMethodParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDeclaration__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldDeclarationAccess().getModifierAssignment_1_0()); }
(rule__FieldDeclaration__ModifierAssignment_1_0)
{ after(grammarAccess.getFieldDeclarationAccess().getModifierAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getFieldDeclarationAccess().getModifierAssignment_1_1()); }
(rule__FieldDeclaration__ModifierAssignment_1_1)
{ after(grammarAccess.getFieldDeclarationAccess().getModifierAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getInterfaceTypeAssignment_0()); }
(rule__Type__InterfaceTypeAssignment_0)
{ after(grammarAccess.getTypeAccess().getInterfaceTypeAssignment_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getPrimitiveTypeAssignment_1()); }
(rule__Type__PrimitiveTypeAssignment_1)
{ after(grammarAccess.getTypeAccess().getPrimitiveTypeAssignment_1()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getPrimitiveTypeAssignment_2()); }
(rule__Type__PrimitiveTypeAssignment_2)
{ after(grammarAccess.getTypeAccess().getPrimitiveTypeAssignment_2()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getPrimitiveTypeAssignment_3()); }
(rule__Type__PrimitiveTypeAssignment_3)
{ after(grammarAccess.getTypeAccess().getPrimitiveTypeAssignment_3()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getPrimitiveTypeAssignment_4()); }
(rule__Type__PrimitiveTypeAssignment_4)
{ after(grammarAccess.getTypeAccess().getPrimitiveTypeAssignment_4()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getPrimitiveTypeAssignment_5()); }
(rule__Type__PrimitiveTypeAssignment_5)
{ after(grammarAccess.getTypeAccess().getPrimitiveTypeAssignment_5()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getPrimitiveTypeAssignment_6()); }
(rule__Type__PrimitiveTypeAssignment_6)
{ after(grammarAccess.getTypeAccess().getPrimitiveTypeAssignment_6()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getPrimitiveTypeAssignment_7()); }
(rule__Type__PrimitiveTypeAssignment_7)
{ after(grammarAccess.getTypeAccess().getPrimitiveTypeAssignment_7()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getPrimitiveTypeAssignment_8()); }
(rule__Type__PrimitiveTypeAssignment_8)
{ after(grammarAccess.getTypeAccess().getPrimitiveTypeAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnTypeAccess().getInterfaceTypeAssignment_0()); }
(rule__ReturnType__InterfaceTypeAssignment_0)
{ after(grammarAccess.getReturnTypeAccess().getInterfaceTypeAssignment_0()); }
)

    |(
{ before(grammarAccess.getReturnTypeAccess().getPrimitiveTypeAssignment_1()); }
(rule__ReturnType__PrimitiveTypeAssignment_1)
{ after(grammarAccess.getReturnTypeAccess().getPrimitiveTypeAssignment_1()); }
)

    |(
{ before(grammarAccess.getReturnTypeAccess().getPrimitiveTypeAssignment_2()); }
(rule__ReturnType__PrimitiveTypeAssignment_2)
{ after(grammarAccess.getReturnTypeAccess().getPrimitiveTypeAssignment_2()); }
)

    |(
{ before(grammarAccess.getReturnTypeAccess().getPrimitiveTypeAssignment_3()); }
(rule__ReturnType__PrimitiveTypeAssignment_3)
{ after(grammarAccess.getReturnTypeAccess().getPrimitiveTypeAssignment_3()); }
)

    |(
{ before(grammarAccess.getReturnTypeAccess().getPrimitiveTypeAssignment_4()); }
(rule__ReturnType__PrimitiveTypeAssignment_4)
{ after(grammarAccess.getReturnTypeAccess().getPrimitiveTypeAssignment_4()); }
)

    |(
{ before(grammarAccess.getReturnTypeAccess().getPrimitiveTypeAssignment_5()); }
(rule__ReturnType__PrimitiveTypeAssignment_5)
{ after(grammarAccess.getReturnTypeAccess().getPrimitiveTypeAssignment_5()); }
)

    |(
{ before(grammarAccess.getReturnTypeAccess().getPrimitiveTypeAssignment_6()); }
(rule__ReturnType__PrimitiveTypeAssignment_6)
{ after(grammarAccess.getReturnTypeAccess().getPrimitiveTypeAssignment_6()); }
)

    |(
{ before(grammarAccess.getReturnTypeAccess().getPrimitiveTypeAssignment_7()); }
(rule__ReturnType__PrimitiveTypeAssignment_7)
{ after(grammarAccess.getReturnTypeAccess().getPrimitiveTypeAssignment_7()); }
)

    |(
{ before(grammarAccess.getReturnTypeAccess().getPrimitiveTypeAssignment_8()); }
(rule__ReturnType__PrimitiveTypeAssignment_8)
{ after(grammarAccess.getReturnTypeAccess().getPrimitiveTypeAssignment_8()); }
)

    |(
{ before(grammarAccess.getReturnTypeAccess().getPrimitiveTypeAssignment_9()); }
(rule__ReturnType__PrimitiveTypeAssignment_9)
{ after(grammarAccess.getReturnTypeAccess().getPrimitiveTypeAssignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getExpressionStatementParserRuleCall_0()); }
	ruleExpressionStatement
{ after(grammarAccess.getStatementAccess().getExpressionStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getIfThenElseStatementParserRuleCall_1()); }
	ruleIfThenElseStatement
{ after(grammarAccess.getStatementAccess().getIfThenElseStatementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getWhileStatementParserRuleCall_2()); }
	ruleWhileStatement
{ after(grammarAccess.getStatementAccess().getWhileStatementParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanOperatorAccess().getOperatorAssignment_0()); }
(rule__BooleanOperator__OperatorAssignment_0)
{ after(grammarAccess.getBooleanOperatorAccess().getOperatorAssignment_0()); }
)

    |(
{ before(grammarAccess.getBooleanOperatorAccess().getOperatorAssignment_1()); }
(rule__BooleanOperator__OperatorAssignment_1)
{ after(grammarAccess.getBooleanOperatorAccess().getOperatorAssignment_1()); }
)

    |(
{ before(grammarAccess.getBooleanOperatorAccess().getOperatorAssignment_2()); }
(rule__BooleanOperator__OperatorAssignment_2)
{ after(grammarAccess.getBooleanOperatorAccess().getOperatorAssignment_2()); }
)

    |(
{ before(grammarAccess.getBooleanOperatorAccess().getOperatorAssignment_3()); }
(rule__BooleanOperator__OperatorAssignment_3)
{ after(grammarAccess.getBooleanOperatorAccess().getOperatorAssignment_3()); }
)

    |(
{ before(grammarAccess.getBooleanOperatorAccess().getOperatorAssignment_4()); }
(rule__BooleanOperator__OperatorAssignment_4)
{ after(grammarAccess.getBooleanOperatorAccess().getOperatorAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicBooleanExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicBooleanExpressionAccess().getSimpleComparationParserRuleCall_0()); }
	ruleSimpleComparation
{ after(grammarAccess.getAtomicBooleanExpressionAccess().getSimpleComparationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAtomicBooleanExpressionAccess().getNestedBooleanExpressionParserRuleCall_1()); }
	ruleNestedBooleanExpression
{ after(grammarAccess.getAtomicBooleanExpressionAccess().getNestedBooleanExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperatorAccess().getOperatorAssignment_0()); }
(rule__CompareOperator__OperatorAssignment_0)
{ after(grammarAccess.getCompareOperatorAccess().getOperatorAssignment_0()); }
)

    |(
{ before(grammarAccess.getCompareOperatorAccess().getOperatorAssignment_1()); }
(rule__CompareOperator__OperatorAssignment_1)
{ after(grammarAccess.getCompareOperatorAccess().getOperatorAssignment_1()); }
)

    |(
{ before(grammarAccess.getCompareOperatorAccess().getOperatorAssignment_2()); }
(rule__CompareOperator__OperatorAssignment_2)
{ after(grammarAccess.getCompareOperatorAccess().getOperatorAssignment_2()); }
)

    |(
{ before(grammarAccess.getCompareOperatorAccess().getOperatorAssignment_3()); }
(rule__CompareOperator__OperatorAssignment_3)
{ after(grammarAccess.getCompareOperatorAccess().getOperatorAssignment_3()); }
)

    |(
{ before(grammarAccess.getCompareOperatorAccess().getOperatorAssignment_4()); }
(rule__CompareOperator__OperatorAssignment_4)
{ after(grammarAccess.getCompareOperatorAccess().getOperatorAssignment_4()); }
)

    |(
{ before(grammarAccess.getCompareOperatorAccess().getOperatorAssignment_5()); }
(rule__CompareOperator__OperatorAssignment_5)
{ after(grammarAccess.getCompareOperatorAccess().getOperatorAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalParameter__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalParameterAccess().getGroup_0()); }
(rule__LocalParameter__Group_0__0)
{ after(grammarAccess.getLocalParameterAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getLocalParameterAccess().getGroup_1()); }
(rule__LocalParameter__Group_1__0)
{ after(grammarAccess.getLocalParameterAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getSignAssignment_1_0()); }
(rule__Expression__SignAssignment_1_0)
{ after(grammarAccess.getExpressionAccess().getSignAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getSignAssignment_1_1()); }
(rule__Expression__SignAssignment_1_1)
{ after(grammarAccess.getExpressionAccess().getSignAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__OperatorListAlternatives_3_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getOperatorListPlusSignKeyword_3_0_0_0()); }

	'+' 

{ after(grammarAccess.getExpressionAccess().getOperatorListPlusSignKeyword_3_0_0_0()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getOperatorListHyphenMinusKeyword_3_0_0_1()); }

	'-' 

{ after(grammarAccess.getExpressionAccess().getOperatorListHyphenMinusKeyword_3_0_0_1()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getOperatorListAsteriskKeyword_3_0_0_2()); }

	'*' 

{ after(grammarAccess.getExpressionAccess().getOperatorListAsteriskKeyword_3_0_0_2()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getOperatorListSolidusKeyword_3_0_0_3()); }

	'/' 

{ after(grammarAccess.getExpressionAccess().getOperatorListSolidusKeyword_3_0_0_3()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getOperatorListPercentSignKeyword_3_0_0_4()); }

	'%' 

{ after(grammarAccess.getExpressionAccess().getOperatorListPercentSignKeyword_3_0_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DottedExpression__Alternatives_2_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDottedExpressionAccess().getValueAssignment_2_3_1_0()); }
(rule__DottedExpression__ValueAssignment_2_3_1_0)
{ after(grammarAccess.getDottedExpressionAccess().getValueAssignment_2_3_1_0()); }
)

    |(
{ before(grammarAccess.getDottedExpressionAccess().getValueAssignment_2_3_1_1()); }
(rule__DottedExpression__ValueAssignment_2_3_1_1)
{ after(grammarAccess.getDottedExpressionAccess().getValueAssignment_2_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Start__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartAccess().getNullParserRuleCall_0()); }
	ruleNull
{ after(grammarAccess.getStartAccess().getNullParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStartAccess().getOutputParserRuleCall_1()); }
	ruleOutput
{ after(grammarAccess.getStartAccess().getOutputParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getStartAccess().getInputParserRuleCall_2()); }
	ruleInput
{ after(grammarAccess.getStartAccess().getInputParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getStartAccess().getArgsParserRuleCall_3()); }
	ruleArgs
{ after(grammarAccess.getStartAccess().getArgsParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getStartAccess().getBooleanConstantParserRuleCall_4()); }
	ruleBooleanConstant
{ after(grammarAccess.getStartAccess().getBooleanConstantParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getStartAccess().getNumberParserRuleCall_5()); }
	ruleNumber
{ after(grammarAccess.getStartAccess().getNumberParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getStartAccess().getStringConstantParserRuleCall_6()); }
	ruleStringConstant
{ after(grammarAccess.getStartAccess().getStringConstantParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getStartAccess().getCastParserRuleCall_7()); }
	ruleCast
{ after(grammarAccess.getStartAccess().getCastParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getStartAccess().getThisParserRuleCall_8()); }
	ruleThis
{ after(grammarAccess.getStartAccess().getThisParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getStartAccess().getParameterReferenceParserRuleCall_9()); }
	ruleParameterReference
{ after(grammarAccess.getStartAccess().getParameterReferenceParserRuleCall_9()); }
)

    |(
{ before(grammarAccess.getStartAccess().getConstructorInvocationParserRuleCall_10()); }
	ruleConstructorInvocation
{ after(grammarAccess.getStartAccess().getConstructorInvocationParserRuleCall_10()); }
)

    |(
{ before(grammarAccess.getStartAccess().getNestedExpressionParserRuleCall_11()); }
	ruleNestedExpression
{ after(grammarAccess.getStartAccess().getNestedExpressionParserRuleCall_11()); }
)

    |(
{ before(grammarAccess.getStartAccess().getParameterAssignmentParserRuleCall_12()); }
	ruleParameterAssignment
{ after(grammarAccess.getStartAccess().getParameterAssignmentParserRuleCall_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanConstant__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanConstantAccess().getValueAssignment_0()); }
(rule__BooleanConstant__ValueAssignment_0)
{ after(grammarAccess.getBooleanConstantAccess().getValueAssignment_0()); }
)

    |(
{ before(grammarAccess.getBooleanConstantAccess().getValueAssignment_1()); }
(rule__BooleanConstant__ValueAssignment_1)
{ after(grammarAccess.getBooleanConstantAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorInvocation__Alternatives_3_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorInvocationAccess().getArgumentListAssignment_3_0_0_0()); }
(rule__ConstructorInvocation__ArgumentListAssignment_3_0_0_0)
{ after(grammarAccess.getConstructorInvocationAccess().getArgumentListAssignment_3_0_0_0()); }
)

    |(
{ before(grammarAccess.getConstructorInvocationAccess().getArgumentListAssignment_3_0_0_1()); }
(rule__ConstructorInvocation__ArgumentListAssignment_3_0_0_1)
{ after(grammarAccess.getConstructorInvocationAccess().getArgumentListAssignment_3_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorInvocation__Alternatives_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorInvocationAccess().getArgumentListAssignment_3_1_0()); }
(rule__ConstructorInvocation__ArgumentListAssignment_3_1_0)
{ after(grammarAccess.getConstructorInvocationAccess().getArgumentListAssignment_3_1_0()); }
)

    |(
{ before(grammarAccess.getConstructorInvocationAccess().getArgumentListAssignment_3_1_1()); }
(rule__ConstructorInvocation__ArgumentListAssignment_3_1_1)
{ after(grammarAccess.getConstructorInvocationAccess().getArgumentListAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getMethodInvocationParserRuleCall_0()); }
	ruleMethodInvocation
{ after(grammarAccess.getMessageAccess().getMethodInvocationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getMessageAccess().getFieldAccessParserRuleCall_1()); }
	ruleFieldAccess
{ after(grammarAccess.getMessageAccess().getFieldAccessParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__Alternatives_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodInvocationAccess().getArgumentListAssignment_2_0_0()); }
(rule__MethodInvocation__ArgumentListAssignment_2_0_0)
{ after(grammarAccess.getMethodInvocationAccess().getArgumentListAssignment_2_0_0()); }
)

    |(
{ before(grammarAccess.getMethodInvocationAccess().getArgumentListAssignment_2_0_1()); }
(rule__MethodInvocation__ArgumentListAssignment_2_0_1)
{ after(grammarAccess.getMethodInvocationAccess().getArgumentListAssignment_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__Alternatives_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodInvocationAccess().getArgumentListAssignment_2_1_1_0()); }
(rule__MethodInvocation__ArgumentListAssignment_2_1_1_0)
{ after(grammarAccess.getMethodInvocationAccess().getArgumentListAssignment_2_1_1_0()); }
)

    |(
{ before(grammarAccess.getMethodInvocationAccess().getArgumentListAssignment_2_1_1_1()); }
(rule__MethodInvocation__ArgumentListAssignment_2_1_1_1)
{ after(grammarAccess.getMethodInvocationAccess().getArgumentListAssignment_2_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterAssignment__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAssignmentAccess().getValueAssignment_2_0()); }
(rule__ParameterAssignment__ValueAssignment_2_0)
{ after(grammarAccess.getParameterAssignmentAccess().getValueAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getParameterAssignmentAccess().getValueAssignment_2_1()); }
(rule__ParameterAssignment__ValueAssignment_2_1)
{ after(grammarAccess.getParameterAssignmentAccess().getValueAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__File__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__File__Group__0__Impl
	rule__File__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__File__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileAccess().getImportListAssignment_0()); }
(rule__File__ImportListAssignment_0)*
{ after(grammarAccess.getFileAccess().getImportListAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__File__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__File__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__File__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileAccess().getElementListAssignment_1()); }
(rule__File__ElementListAssignment_1)*
{ after(grammarAccess.getFileAccess().getElementListAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
(rule__Import__ImportURIAssignment_1)
{ after(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Interface__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group__0__Impl
	rule__Interface__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getConstructAssignment_0()); }
(rule__Interface__ConstructAssignment_0)
{ after(grammarAccess.getInterfaceAccess().getConstructAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group__1__Impl
	rule__Interface__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getNameAssignment_1()); }
(rule__Interface__NameAssignment_1)
{ after(grammarAccess.getInterfaceAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group__2__Impl
	rule__Interface__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getGroup_2()); }
(rule__Interface__Group_2__0)?
{ after(grammarAccess.getInterfaceAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group__3__Impl
	rule__Interface__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getInterfaceAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group__4__Impl
	rule__Interface__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getRequiredMethodListAssignment_4()); }
(rule__Interface__RequiredMethodListAssignment_4)*
{ after(grammarAccess.getInterfaceAccess().getRequiredMethodListAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getInterfaceAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Interface__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group_2__0__Impl
	rule__Interface__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getExtendsKeyword_2_0()); }

	'extends' 

{ after(grammarAccess.getInterfaceAccess().getExtendsKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group_2__1__Impl
	rule__Interface__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getExtendsListAssignment_2_1()); }
(rule__Interface__ExtendsListAssignment_2_1)
{ after(grammarAccess.getInterfaceAccess().getExtendsListAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getGroup_2_2()); }
(rule__Interface__Group_2_2__0)*
{ after(grammarAccess.getInterfaceAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Interface__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group_2_2__0__Impl
	rule__Interface__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getCommaKeyword_2_2_0()); }

	',' 

{ after(grammarAccess.getInterfaceAccess().getCommaKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getExtendsListAssignment_2_2_1()); }
(rule__Interface__ExtendsListAssignment_2_2_1)
{ after(grammarAccess.getInterfaceAccess().getExtendsListAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Record__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Record__Group__0__Impl
	rule__Record__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordAccess().getConstructAssignment_0()); }
(rule__Record__ConstructAssignment_0)
{ after(grammarAccess.getRecordAccess().getConstructAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Record__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Record__Group__1__Impl
	rule__Record__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordAccess().getNameAssignment_1()); }
(rule__Record__NameAssignment_1)
{ after(grammarAccess.getRecordAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Record__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Record__Group__2__Impl
	rule__Record__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordAccess().getIsKeyword_2()); }

	'is' 

{ after(grammarAccess.getRecordAccess().getIsKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Record__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Record__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordAccess().getExpressionAssignment_3()); }
(rule__Record__ExpressionAssignment_3)
{ after(grammarAccess.getRecordAccess().getExpressionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Trait__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trait__Group__0__Impl
	rule__Trait__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Trait__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitAccess().getConstructAssignment_0()); }
(rule__Trait__ConstructAssignment_0)
{ after(grammarAccess.getTraitAccess().getConstructAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Trait__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trait__Group__1__Impl
	rule__Trait__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Trait__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitAccess().getNameAssignment_1()); }
(rule__Trait__NameAssignment_1)
{ after(grammarAccess.getTraitAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Trait__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trait__Group__2__Impl
	rule__Trait__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Trait__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitAccess().getIsKeyword_2()); }

	'is' 

{ after(grammarAccess.getTraitAccess().getIsKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Trait__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trait__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Trait__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitAccess().getExpressionAssignment_3()); }
(rule__Trait__ExpressionAssignment_3)
{ after(grammarAccess.getTraitAccess().getExpressionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Class__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__0__Impl
	rule__Class__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getConstructAssignment_0()); }
(rule__Class__ConstructAssignment_0)
{ after(grammarAccess.getClassAccess().getConstructAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__1__Impl
	rule__Class__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getNameAssignment_1()); }
(rule__Class__NameAssignment_1)
{ after(grammarAccess.getClassAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__2__Impl
	rule__Class__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getImplementsKeyword_2()); }

	'implements' 

{ after(grammarAccess.getClassAccess().getImplementsKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__3__Impl
	rule__Class__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getImplementsListAssignment_3()); }
(rule__Class__ImplementsListAssignment_3)
{ after(grammarAccess.getClassAccess().getImplementsListAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__4__Impl
	rule__Class__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getGroup_4()); }
(rule__Class__Group_4__0)*
{ after(grammarAccess.getClassAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__5__Impl
	rule__Class__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getByKeyword_5()); }

	'by' 

{ after(grammarAccess.getClassAccess().getByKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__6__Impl
	rule__Class__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getRecordExpressionAssignment_6()); }
(rule__Class__RecordExpressionAssignment_6)
{ after(grammarAccess.getClassAccess().getRecordExpressionAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__7__Impl
	rule__Class__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getAndKeyword_7()); }

	'and' 

{ after(grammarAccess.getClassAccess().getAndKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__8__Impl
	rule__Class__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getTraitExpressionAssignment_8()); }
(rule__Class__TraitExpressionAssignment_8)
{ after(grammarAccess.getClassAccess().getTraitExpressionAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__9__Impl
	rule__Class__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getLeftCurlyBracketKeyword_9()); }

	'{' 

{ after(grammarAccess.getClassAccess().getLeftCurlyBracketKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__10__Impl
	rule__Class__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getConstructorListAssignment_10()); }
(rule__Class__ConstructorListAssignment_10)*
{ after(grammarAccess.getClassAccess().getConstructorListAssignment_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getRightCurlyBracketKeyword_11()); }

	'}' 

{ after(grammarAccess.getClassAccess().getRightCurlyBracketKeyword_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


























rule__Class__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group_4__0__Impl
	rule__Class__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getCommaKeyword_4_0()); }

	',' 

{ after(grammarAccess.getClassAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getImplementsListAssignment_4_1()); }
(rule__Class__ImplementsListAssignment_4_1)
{ after(grammarAccess.getClassAccess().getImplementsListAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Program__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__0__Impl
	rule__Program__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getConstructAssignment_0()); }
(rule__Program__ConstructAssignment_0)
{ after(grammarAccess.getProgramAccess().getConstructAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__1__Impl
	rule__Program__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getNameAssignment_1()); }
(rule__Program__NameAssignment_1)
{ after(grammarAccess.getProgramAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__2__Impl
	rule__Program__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getProgramAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__3__Impl
	rule__Program__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getBlockAssignment_3()); }
(rule__Program__BlockAssignment_3)
{ after(grammarAccess.getProgramAccess().getBlockAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getProgramAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__RecordExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordExpression__Group__0__Impl
	rule__RecordExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordExpressionAccess().getRecordListAssignment_0()); }
(rule__RecordExpression__RecordListAssignment_0)
{ after(grammarAccess.getRecordExpressionAccess().getRecordListAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordExpressionAccess().getGroup_1()); }
(rule__RecordExpression__Group_1__0)*
{ after(grammarAccess.getRecordExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RecordExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordExpression__Group_1__0__Impl
	rule__RecordExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordExpressionAccess().getPlusSignKeyword_1_0()); }

	'+' 

{ after(grammarAccess.getRecordExpressionAccess().getPlusSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordExpressionAccess().getRecordListAssignment_1_1()); }
(rule__RecordExpression__RecordListAssignment_1_1)
{ after(grammarAccess.getRecordExpressionAccess().getRecordListAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AnonimousRecord__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnonimousRecord__Group__0__Impl
	rule__AnonimousRecord__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonimousRecord__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnonimousRecordAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getAnonimousRecordAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnonimousRecord__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnonimousRecord__Group__1__Impl
	rule__AnonimousRecord__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonimousRecord__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnonimousRecordAccess().getAnonimousRecordAction_1()); }
(

)
{ after(grammarAccess.getAnonimousRecordAccess().getAnonimousRecordAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnonimousRecord__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnonimousRecord__Group__2__Impl
	rule__AnonimousRecord__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonimousRecord__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnonimousRecordAccess().getDeclarationListAssignment_2()); }
(rule__AnonimousRecord__DeclarationListAssignment_2)*
{ after(grammarAccess.getAnonimousRecordAccess().getDeclarationListAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnonimousRecord__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnonimousRecord__Group__3__Impl
	rule__AnonimousRecord__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonimousRecord__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnonimousRecordAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getAnonimousRecordAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnonimousRecord__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnonimousRecord__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonimousRecord__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnonimousRecordAccess().getGroup_4()); }
(rule__AnonimousRecord__Group_4__0)?
{ after(grammarAccess.getAnonimousRecordAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__AnonimousRecord__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnonimousRecord__Group_4__0__Impl
	rule__AnonimousRecord__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonimousRecord__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnonimousRecordAccess().getLeftSquareBracketKeyword_4_0()); }

	'[' 

{ after(grammarAccess.getAnonimousRecordAccess().getLeftSquareBracketKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnonimousRecord__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnonimousRecord__Group_4__1__Impl
	rule__AnonimousRecord__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonimousRecord__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnonimousRecordAccess().getOperationListAssignment_4_1()); }
(rule__AnonimousRecord__OperationListAssignment_4_1)
{ after(grammarAccess.getAnonimousRecordAccess().getOperationListAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnonimousRecord__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnonimousRecord__Group_4__2__Impl
	rule__AnonimousRecord__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonimousRecord__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnonimousRecordAccess().getGroup_4_2()); }
(rule__AnonimousRecord__Group_4_2__0)*
{ after(grammarAccess.getAnonimousRecordAccess().getGroup_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnonimousRecord__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnonimousRecord__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonimousRecord__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnonimousRecordAccess().getRightSquareBracketKeyword_4_3()); }

	']' 

{ after(grammarAccess.getAnonimousRecordAccess().getRightSquareBracketKeyword_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AnonimousRecord__Group_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnonimousRecord__Group_4_2__0__Impl
	rule__AnonimousRecord__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonimousRecord__Group_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnonimousRecordAccess().getCommaKeyword_4_2_0()); }

	',' 

{ after(grammarAccess.getAnonimousRecordAccess().getCommaKeyword_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnonimousRecord__Group_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnonimousRecord__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonimousRecord__Group_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnonimousRecordAccess().getOperationListAssignment_4_2_1()); }
(rule__AnonimousRecord__OperationListAssignment_4_2_1)
{ after(grammarAccess.getAnonimousRecordAccess().getOperationListAssignment_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RecordName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordName__Group__0__Impl
	rule__RecordName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordNameAccess().getRecordAssignment_0()); }
(rule__RecordName__RecordAssignment_0)
{ after(grammarAccess.getRecordNameAccess().getRecordAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordNameAccess().getGroup_1()); }
(rule__RecordName__Group_1__0)?
{ after(grammarAccess.getRecordNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RecordName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordName__Group_1__0__Impl
	rule__RecordName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordNameAccess().getLeftSquareBracketKeyword_1_0()); }

	'[' 

{ after(grammarAccess.getRecordNameAccess().getLeftSquareBracketKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordName__Group_1__1__Impl
	rule__RecordName__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordNameAccess().getOperationListAssignment_1_1()); }
(rule__RecordName__OperationListAssignment_1_1)
{ after(grammarAccess.getRecordNameAccess().getOperationListAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordName__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordName__Group_1__2__Impl
	rule__RecordName__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordName__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordNameAccess().getGroup_1_2()); }
(rule__RecordName__Group_1_2__0)*
{ after(grammarAccess.getRecordNameAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordName__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordName__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordName__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordNameAccess().getRightSquareBracketKeyword_1_3()); }

	']' 

{ after(grammarAccess.getRecordNameAccess().getRightSquareBracketKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__RecordName__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordName__Group_1_2__0__Impl
	rule__RecordName__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordName__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordNameAccess().getCommaKeyword_1_2_0()); }

	',' 

{ after(grammarAccess.getRecordNameAccess().getCommaKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordName__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordName__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordName__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordNameAccess().getOperationListAssignment_1_2_1()); }
(rule__RecordName__OperationListAssignment_1_2_1)
{ after(grammarAccess.getRecordNameAccess().getOperationListAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NestedRecordExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedRecordExpression__Group__0__Impl
	rule__NestedRecordExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedRecordExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedRecordExpressionAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getNestedRecordExpressionAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NestedRecordExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedRecordExpression__Group__1__Impl
	rule__NestedRecordExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedRecordExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedRecordExpressionAccess().getExpressionAssignment_1()); }
(rule__NestedRecordExpression__ExpressionAssignment_1)
{ after(grammarAccess.getNestedRecordExpressionAccess().getExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NestedRecordExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedRecordExpression__Group__2__Impl
	rule__NestedRecordExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedRecordExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedRecordExpressionAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getNestedRecordExpressionAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NestedRecordExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedRecordExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedRecordExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedRecordExpressionAccess().getGroup_3()); }
(rule__NestedRecordExpression__Group_3__0)?
{ after(grammarAccess.getNestedRecordExpressionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__NestedRecordExpression__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedRecordExpression__Group_3__0__Impl
	rule__NestedRecordExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedRecordExpression__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedRecordExpressionAccess().getLeftSquareBracketKeyword_3_0()); }

	'[' 

{ after(grammarAccess.getNestedRecordExpressionAccess().getLeftSquareBracketKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NestedRecordExpression__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedRecordExpression__Group_3__1__Impl
	rule__NestedRecordExpression__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedRecordExpression__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedRecordExpressionAccess().getOperationListAssignment_3_1()); }
(rule__NestedRecordExpression__OperationListAssignment_3_1)
{ after(grammarAccess.getNestedRecordExpressionAccess().getOperationListAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NestedRecordExpression__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedRecordExpression__Group_3__2__Impl
	rule__NestedRecordExpression__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedRecordExpression__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedRecordExpressionAccess().getGroup_3_2()); }
(rule__NestedRecordExpression__Group_3_2__0)*
{ after(grammarAccess.getNestedRecordExpressionAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NestedRecordExpression__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedRecordExpression__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedRecordExpression__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedRecordExpressionAccess().getRightSquareBracketKeyword_3_3()); }

	']' 

{ after(grammarAccess.getNestedRecordExpressionAccess().getRightSquareBracketKeyword_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__NestedRecordExpression__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedRecordExpression__Group_3_2__0__Impl
	rule__NestedRecordExpression__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedRecordExpression__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedRecordExpressionAccess().getCommaKeyword_3_2_0()); }

	',' 

{ after(grammarAccess.getNestedRecordExpressionAccess().getCommaKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NestedRecordExpression__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedRecordExpression__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedRecordExpression__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedRecordExpressionAccess().getOperationListAssignment_3_2_1()); }
(rule__NestedRecordExpression__OperationListAssignment_3_2_1)
{ after(grammarAccess.getNestedRecordExpressionAccess().getOperationListAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RecordOperation__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordOperation__Group_0__0__Impl
	rule__RecordOperation__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordOperation__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordOperationAccess().getRecordExcludeAction_0_0()); }
(

)
{ after(grammarAccess.getRecordOperationAccess().getRecordExcludeAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordOperation__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordOperation__Group_0__1__Impl
	rule__RecordOperation__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordOperation__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordOperationAccess().getExcludeKeyword_0_1()); }

	'exclude' 

{ after(grammarAccess.getRecordOperationAccess().getExcludeKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordOperation__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordOperation__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordOperation__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordOperationAccess().getFieldAssignment_0_2()); }
(rule__RecordOperation__FieldAssignment_0_2)
{ after(grammarAccess.getRecordOperationAccess().getFieldAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RecordOperation__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordOperation__Group_1__0__Impl
	rule__RecordOperation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordOperation__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordOperationAccess().getRecordRenameAction_1_0()); }
(

)
{ after(grammarAccess.getRecordOperationAccess().getRecordRenameAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordOperation__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordOperation__Group_1__1__Impl
	rule__RecordOperation__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordOperation__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordOperationAccess().getOriginalFieldAssignment_1_1()); }
(rule__RecordOperation__OriginalFieldAssignment_1_1)
{ after(grammarAccess.getRecordOperationAccess().getOriginalFieldAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordOperation__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordOperation__Group_1__2__Impl
	rule__RecordOperation__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordOperation__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordOperationAccess().getRenameToKeyword_1_2()); }

	'renameTo' 

{ after(grammarAccess.getRecordOperationAccess().getRenameToKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordOperation__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordOperation__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordOperation__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordOperationAccess().getNewFieldAssignment_1_3()); }
(rule__RecordOperation__NewFieldAssignment_1_3)
{ after(grammarAccess.getRecordOperationAccess().getNewFieldAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__RecordOperation__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordOperation__Group_2__0__Impl
	rule__RecordOperation__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordOperation__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordOperationAccess().getRecordRenameAction_2_0()); }
(

)
{ after(grammarAccess.getRecordOperationAccess().getRecordRenameAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordOperation__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordOperation__Group_2__1__Impl
	rule__RecordOperation__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordOperation__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordOperationAccess().getOriginalFieldAssignment_2_1()); }
(rule__RecordOperation__OriginalFieldAssignment_2_1)
{ after(grammarAccess.getRecordOperationAccess().getOriginalFieldAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordOperation__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordOperation__Group_2__2__Impl
	rule__RecordOperation__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordOperation__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordOperationAccess().getRenameFKeyword_2_2()); }

	'renameF' 

{ after(grammarAccess.getRecordOperationAccess().getRenameFKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordOperation__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordOperation__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordOperation__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordOperationAccess().getNewFieldAssignment_2_3()); }
(rule__RecordOperation__NewFieldAssignment_2_3)
{ after(grammarAccess.getRecordOperationAccess().getNewFieldAssignment_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TraitExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraitExpression__Group__0__Impl
	rule__TraitExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TraitExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitExpressionAccess().getTraitListAssignment_0()); }
(rule__TraitExpression__TraitListAssignment_0)
{ after(grammarAccess.getTraitExpressionAccess().getTraitListAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraitExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraitExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TraitExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitExpressionAccess().getGroup_1()); }
(rule__TraitExpression__Group_1__0)*
{ after(grammarAccess.getTraitExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TraitExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraitExpression__Group_1__0__Impl
	rule__TraitExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TraitExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitExpressionAccess().getPlusSignKeyword_1_0()); }

	'+' 

{ after(grammarAccess.getTraitExpressionAccess().getPlusSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraitExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraitExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TraitExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitExpressionAccess().getTraitListAssignment_1_1()); }
(rule__TraitExpression__TraitListAssignment_1_1)
{ after(grammarAccess.getTraitExpressionAccess().getTraitListAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AnonimousTrait__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnonimousTrait__Group__0__Impl
	rule__AnonimousTrait__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonimousTrait__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnonimousTraitAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getAnonimousTraitAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnonimousTrait__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnonimousTrait__Group__1__Impl
	rule__AnonimousTrait__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonimousTrait__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnonimousTraitAccess().getAnonimousTraitAction_1()); }
(

)
{ after(grammarAccess.getAnonimousTraitAccess().getAnonimousTraitAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnonimousTrait__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnonimousTrait__Group__2__Impl
	rule__AnonimousTrait__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonimousTrait__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnonimousTraitAccess().getDefinitionListAssignment_2()); }
(rule__AnonimousTrait__DefinitionListAssignment_2)*
{ after(grammarAccess.getAnonimousTraitAccess().getDefinitionListAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnonimousTrait__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnonimousTrait__Group__3__Impl
	rule__AnonimousTrait__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonimousTrait__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnonimousTraitAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getAnonimousTraitAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnonimousTrait__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnonimousTrait__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonimousTrait__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnonimousTraitAccess().getGroup_4()); }
(rule__AnonimousTrait__Group_4__0)?
{ after(grammarAccess.getAnonimousTraitAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__AnonimousTrait__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnonimousTrait__Group_4__0__Impl
	rule__AnonimousTrait__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonimousTrait__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnonimousTraitAccess().getLeftSquareBracketKeyword_4_0()); }

	'[' 

{ after(grammarAccess.getAnonimousTraitAccess().getLeftSquareBracketKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnonimousTrait__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnonimousTrait__Group_4__1__Impl
	rule__AnonimousTrait__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonimousTrait__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnonimousTraitAccess().getOperationListAssignment_4_1()); }
(rule__AnonimousTrait__OperationListAssignment_4_1)
{ after(grammarAccess.getAnonimousTraitAccess().getOperationListAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnonimousTrait__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnonimousTrait__Group_4__2__Impl
	rule__AnonimousTrait__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonimousTrait__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnonimousTraitAccess().getGroup_4_2()); }
(rule__AnonimousTrait__Group_4_2__0)*
{ after(grammarAccess.getAnonimousTraitAccess().getGroup_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnonimousTrait__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnonimousTrait__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonimousTrait__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnonimousTraitAccess().getRightSquareBracketKeyword_4_3()); }

	']' 

{ after(grammarAccess.getAnonimousTraitAccess().getRightSquareBracketKeyword_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AnonimousTrait__Group_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnonimousTrait__Group_4_2__0__Impl
	rule__AnonimousTrait__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonimousTrait__Group_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnonimousTraitAccess().getCommaKeyword_4_2_0()); }

	',' 

{ after(grammarAccess.getAnonimousTraitAccess().getCommaKeyword_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnonimousTrait__Group_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnonimousTrait__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonimousTrait__Group_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnonimousTraitAccess().getOperationListAssignment_4_2_1()); }
(rule__AnonimousTrait__OperationListAssignment_4_2_1)
{ after(grammarAccess.getAnonimousTraitAccess().getOperationListAssignment_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TraitName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraitName__Group__0__Impl
	rule__TraitName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TraitName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitNameAccess().getTraitAssignment_0()); }
(rule__TraitName__TraitAssignment_0)
{ after(grammarAccess.getTraitNameAccess().getTraitAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraitName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraitName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TraitName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitNameAccess().getGroup_1()); }
(rule__TraitName__Group_1__0)?
{ after(grammarAccess.getTraitNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TraitName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraitName__Group_1__0__Impl
	rule__TraitName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TraitName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitNameAccess().getLeftSquareBracketKeyword_1_0()); }

	'[' 

{ after(grammarAccess.getTraitNameAccess().getLeftSquareBracketKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraitName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraitName__Group_1__1__Impl
	rule__TraitName__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TraitName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitNameAccess().getOperationListAssignment_1_1()); }
(rule__TraitName__OperationListAssignment_1_1)
{ after(grammarAccess.getTraitNameAccess().getOperationListAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraitName__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraitName__Group_1__2__Impl
	rule__TraitName__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TraitName__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitNameAccess().getGroup_1_2()); }
(rule__TraitName__Group_1_2__0)*
{ after(grammarAccess.getTraitNameAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraitName__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraitName__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TraitName__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitNameAccess().getRightSquareBracketKeyword_1_3()); }

	']' 

{ after(grammarAccess.getTraitNameAccess().getRightSquareBracketKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TraitName__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraitName__Group_1_2__0__Impl
	rule__TraitName__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TraitName__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitNameAccess().getCommaKeyword_1_2_0()); }

	',' 

{ after(grammarAccess.getTraitNameAccess().getCommaKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraitName__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraitName__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TraitName__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitNameAccess().getOperationListAssignment_1_2_1()); }
(rule__TraitName__OperationListAssignment_1_2_1)
{ after(grammarAccess.getTraitNameAccess().getOperationListAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NestedTraitExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedTraitExpression__Group__0__Impl
	rule__NestedTraitExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedTraitExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedTraitExpressionAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getNestedTraitExpressionAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NestedTraitExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedTraitExpression__Group__1__Impl
	rule__NestedTraitExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedTraitExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedTraitExpressionAccess().getExpressionAssignment_1()); }
(rule__NestedTraitExpression__ExpressionAssignment_1)
{ after(grammarAccess.getNestedTraitExpressionAccess().getExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NestedTraitExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedTraitExpression__Group__2__Impl
	rule__NestedTraitExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedTraitExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedTraitExpressionAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getNestedTraitExpressionAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NestedTraitExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedTraitExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedTraitExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedTraitExpressionAccess().getGroup_3()); }
(rule__NestedTraitExpression__Group_3__0)?
{ after(grammarAccess.getNestedTraitExpressionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__NestedTraitExpression__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedTraitExpression__Group_3__0__Impl
	rule__NestedTraitExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedTraitExpression__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedTraitExpressionAccess().getLeftSquareBracketKeyword_3_0()); }

	'[' 

{ after(grammarAccess.getNestedTraitExpressionAccess().getLeftSquareBracketKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NestedTraitExpression__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedTraitExpression__Group_3__1__Impl
	rule__NestedTraitExpression__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedTraitExpression__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedTraitExpressionAccess().getOperationListAssignment_3_1()); }
(rule__NestedTraitExpression__OperationListAssignment_3_1)
{ after(grammarAccess.getNestedTraitExpressionAccess().getOperationListAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NestedTraitExpression__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedTraitExpression__Group_3__2__Impl
	rule__NestedTraitExpression__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedTraitExpression__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedTraitExpressionAccess().getGroup_3_2()); }
(rule__NestedTraitExpression__Group_3_2__0)*
{ after(grammarAccess.getNestedTraitExpressionAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NestedTraitExpression__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedTraitExpression__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedTraitExpression__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedTraitExpressionAccess().getRightSquareBracketKeyword_3_3()); }

	']' 

{ after(grammarAccess.getNestedTraitExpressionAccess().getRightSquareBracketKeyword_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__NestedTraitExpression__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedTraitExpression__Group_3_2__0__Impl
	rule__NestedTraitExpression__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedTraitExpression__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedTraitExpressionAccess().getCommaKeyword_3_2_0()); }

	',' 

{ after(grammarAccess.getNestedTraitExpressionAccess().getCommaKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NestedTraitExpression__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedTraitExpression__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedTraitExpression__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedTraitExpressionAccess().getOperationListAssignment_3_2_1()); }
(rule__NestedTraitExpression__OperationListAssignment_3_2_1)
{ after(grammarAccess.getNestedTraitExpressionAccess().getOperationListAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TraitOperation__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraitOperation__Group_0__0__Impl
	rule__TraitOperation__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TraitOperation__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitOperationAccess().getTraitExcludeAction_0_0()); }
(

)
{ after(grammarAccess.getTraitOperationAccess().getTraitExcludeAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraitOperation__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraitOperation__Group_0__1__Impl
	rule__TraitOperation__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TraitOperation__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitOperationAccess().getExcludeKeyword_0_1()); }

	'exclude' 

{ after(grammarAccess.getTraitOperationAccess().getExcludeKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraitOperation__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraitOperation__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TraitOperation__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitOperationAccess().getMethodAssignment_0_2()); }
(rule__TraitOperation__MethodAssignment_0_2)
{ after(grammarAccess.getTraitOperationAccess().getMethodAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TraitOperation__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraitOperation__Group_1__0__Impl
	rule__TraitOperation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TraitOperation__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitOperationAccess().getTraitAliasAction_1_0()); }
(

)
{ after(grammarAccess.getTraitOperationAccess().getTraitAliasAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraitOperation__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraitOperation__Group_1__1__Impl
	rule__TraitOperation__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TraitOperation__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitOperationAccess().getOriginalMethodAssignment_1_1()); }
(rule__TraitOperation__OriginalMethodAssignment_1_1)
{ after(grammarAccess.getTraitOperationAccess().getOriginalMethodAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraitOperation__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraitOperation__Group_1__2__Impl
	rule__TraitOperation__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TraitOperation__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitOperationAccess().getAliasAsKeyword_1_2()); }

	'aliasAs' 

{ after(grammarAccess.getTraitOperationAccess().getAliasAsKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraitOperation__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraitOperation__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TraitOperation__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitOperationAccess().getNewMethodAssignment_1_3()); }
(rule__TraitOperation__NewMethodAssignment_1_3)
{ after(grammarAccess.getTraitOperationAccess().getNewMethodAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TraitOperation__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraitOperation__Group_2__0__Impl
	rule__TraitOperation__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TraitOperation__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitOperationAccess().getTraitMethodRenameAction_2_0()); }
(

)
{ after(grammarAccess.getTraitOperationAccess().getTraitMethodRenameAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraitOperation__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraitOperation__Group_2__1__Impl
	rule__TraitOperation__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TraitOperation__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitOperationAccess().getOriginalMethodAssignment_2_1()); }
(rule__TraitOperation__OriginalMethodAssignment_2_1)
{ after(grammarAccess.getTraitOperationAccess().getOriginalMethodAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraitOperation__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraitOperation__Group_2__2__Impl
	rule__TraitOperation__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TraitOperation__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitOperationAccess().getRenameToKeyword_2_2()); }

	'renameTo' 

{ after(grammarAccess.getTraitOperationAccess().getRenameToKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraitOperation__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraitOperation__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TraitOperation__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitOperationAccess().getNewMethodAssignment_2_3()); }
(rule__TraitOperation__NewMethodAssignment_2_3)
{ after(grammarAccess.getTraitOperationAccess().getNewMethodAssignment_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TraitOperation__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraitOperation__Group_3__0__Impl
	rule__TraitOperation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TraitOperation__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitOperationAccess().getTraitMethodRenameAction_3_0()); }
(

)
{ after(grammarAccess.getTraitOperationAccess().getTraitMethodRenameAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraitOperation__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraitOperation__Group_3__1__Impl
	rule__TraitOperation__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TraitOperation__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitOperationAccess().getOriginalMethodAssignment_3_1()); }
(rule__TraitOperation__OriginalMethodAssignment_3_1)
{ after(grammarAccess.getTraitOperationAccess().getOriginalMethodAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraitOperation__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraitOperation__Group_3__2__Impl
	rule__TraitOperation__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TraitOperation__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitOperationAccess().getRenameMKeyword_3_2()); }

	'renameM' 

{ after(grammarAccess.getTraitOperationAccess().getRenameMKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraitOperation__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraitOperation__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TraitOperation__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitOperationAccess().getNewMethodAssignment_3_3()); }
(rule__TraitOperation__NewMethodAssignment_3_3)
{ after(grammarAccess.getTraitOperationAccess().getNewMethodAssignment_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TraitOperation__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraitOperation__Group_4__0__Impl
	rule__TraitOperation__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TraitOperation__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitOperationAccess().getTraitFieldRenameAction_4_0()); }
(

)
{ after(grammarAccess.getTraitOperationAccess().getTraitFieldRenameAction_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraitOperation__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraitOperation__Group_4__1__Impl
	rule__TraitOperation__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TraitOperation__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitOperationAccess().getOriginalFieldAssignment_4_1()); }
(rule__TraitOperation__OriginalFieldAssignment_4_1)
{ after(grammarAccess.getTraitOperationAccess().getOriginalFieldAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraitOperation__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraitOperation__Group_4__2__Impl
	rule__TraitOperation__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TraitOperation__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitOperationAccess().getRenameFieldToKeyword_4_2()); }

	'renameFieldTo' 

{ after(grammarAccess.getTraitOperationAccess().getRenameFieldToKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraitOperation__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraitOperation__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TraitOperation__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitOperationAccess().getNewFieldAssignment_4_3()); }
(rule__TraitOperation__NewFieldAssignment_4_3)
{ after(grammarAccess.getTraitOperationAccess().getNewFieldAssignment_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TraitOperation__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraitOperation__Group_5__0__Impl
	rule__TraitOperation__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TraitOperation__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitOperationAccess().getTraitFieldRenameAction_5_0()); }
(

)
{ after(grammarAccess.getTraitOperationAccess().getTraitFieldRenameAction_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraitOperation__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraitOperation__Group_5__1__Impl
	rule__TraitOperation__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TraitOperation__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitOperationAccess().getOriginalFieldAssignment_5_1()); }
(rule__TraitOperation__OriginalFieldAssignment_5_1)
{ after(grammarAccess.getTraitOperationAccess().getOriginalFieldAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraitOperation__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraitOperation__Group_5__2__Impl
	rule__TraitOperation__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TraitOperation__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitOperationAccess().getRenameFKeyword_5_2()); }

	'renameF' 

{ after(grammarAccess.getTraitOperationAccess().getRenameFKeyword_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraitOperation__Group_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraitOperation__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TraitOperation__Group_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitOperationAccess().getNewFieldAssignment_5_3()); }
(rule__TraitOperation__NewFieldAssignment_5_3)
{ after(grammarAccess.getTraitOperationAccess().getNewFieldAssignment_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FieldDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldDeclaration__Group__0__Impl
	rule__FieldDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldDeclarationAccess().getFieldDeclarationAction_0()); }
(

)
{ after(grammarAccess.getFieldDeclarationAccess().getFieldDeclarationAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldDeclaration__Group__1__Impl
	rule__FieldDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldDeclarationAccess().getAlternatives_1()); }
(rule__FieldDeclaration__Alternatives_1)?
{ after(grammarAccess.getFieldDeclarationAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldDeclaration__Group__2__Impl
	rule__FieldDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldDeclarationAccess().getTypeAssignment_2()); }
(rule__FieldDeclaration__TypeAssignment_2)
{ after(grammarAccess.getFieldDeclarationAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldDeclaration__Group__3__Impl
	rule__FieldDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldDeclarationAccess().getFieldRefAssignment_3()); }
(rule__FieldDeclaration__FieldRefAssignment_3)
{ after(grammarAccess.getFieldDeclarationAccess().getFieldRefAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldDeclarationAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getFieldDeclarationAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__RequiredField__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequiredField__Group__0__Impl
	rule__RequiredField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredField__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredFieldAccess().getRequiredFieldAction_0()); }
(

)
{ after(grammarAccess.getRequiredFieldAccess().getRequiredFieldAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RequiredField__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequiredField__Group__1__Impl
	rule__RequiredField__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredField__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredFieldAccess().getTypeAssignment_1()); }
(rule__RequiredField__TypeAssignment_1)
{ after(grammarAccess.getRequiredFieldAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RequiredField__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequiredField__Group__2__Impl
	rule__RequiredField__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredField__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredFieldAccess().getFieldRefAssignment_2()); }
(rule__RequiredField__FieldRefAssignment_2)
{ after(grammarAccess.getRequiredFieldAccess().getFieldRefAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RequiredField__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequiredField__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredField__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredFieldAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getRequiredFieldAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__RequiredMethod__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequiredMethod__Group__0__Impl
	rule__RequiredMethod__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredMethod__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredMethodAccess().getRequiredMethodAction_0()); }
(

)
{ after(grammarAccess.getRequiredMethodAccess().getRequiredMethodAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RequiredMethod__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequiredMethod__Group__1__Impl
	rule__RequiredMethod__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredMethod__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredMethodAccess().getReturnTypeAssignment_1()); }
(rule__RequiredMethod__ReturnTypeAssignment_1)
{ after(grammarAccess.getRequiredMethodAccess().getReturnTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RequiredMethod__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequiredMethod__Group__2__Impl
	rule__RequiredMethod__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredMethod__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredMethodAccess().getMethodRefAssignment_2()); }
(rule__RequiredMethod__MethodRefAssignment_2)
{ after(grammarAccess.getRequiredMethodAccess().getMethodRefAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RequiredMethod__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequiredMethod__Group__3__Impl
	rule__RequiredMethod__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredMethod__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredMethodAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getRequiredMethodAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RequiredMethod__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequiredMethod__Group__4__Impl
	rule__RequiredMethod__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredMethod__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredMethodAccess().getGroup_4()); }
(rule__RequiredMethod__Group_4__0)?
{ after(grammarAccess.getRequiredMethodAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RequiredMethod__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequiredMethod__Group__5__Impl
	rule__RequiredMethod__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredMethod__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredMethodAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getRequiredMethodAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RequiredMethod__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequiredMethod__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredMethod__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredMethodAccess().getSemicolonKeyword_6()); }

	';' 

{ after(grammarAccess.getRequiredMethodAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__RequiredMethod__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequiredMethod__Group_4__0__Impl
	rule__RequiredMethod__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredMethod__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredMethodAccess().getParameterListAssignment_4_0()); }
(rule__RequiredMethod__ParameterListAssignment_4_0)
{ after(grammarAccess.getRequiredMethodAccess().getParameterListAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RequiredMethod__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequiredMethod__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredMethod__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredMethodAccess().getGroup_4_1()); }
(rule__RequiredMethod__Group_4_1__0)*
{ after(grammarAccess.getRequiredMethodAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RequiredMethod__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequiredMethod__Group_4_1__0__Impl
	rule__RequiredMethod__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredMethod__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredMethodAccess().getCommaKeyword_4_1_0()); }

	',' 

{ after(grammarAccess.getRequiredMethodAccess().getCommaKeyword_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RequiredMethod__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequiredMethod__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredMethod__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredMethodAccess().getParameterListAssignment_4_1_1()); }
(rule__RequiredMethod__ParameterListAssignment_4_1_1)
{ after(grammarAccess.getRequiredMethodAccess().getParameterListAssignment_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ProvidedMethod__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProvidedMethod__Group__0__Impl
	rule__ProvidedMethod__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProvidedMethod__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedMethodAccess().getProvidedMethodAction_0()); }
(

)
{ after(grammarAccess.getProvidedMethodAccess().getProvidedMethodAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProvidedMethod__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProvidedMethod__Group__1__Impl
	rule__ProvidedMethod__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProvidedMethod__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedMethodAccess().getIsSynchronizedAssignment_1()); }
(rule__ProvidedMethod__IsSynchronizedAssignment_1)?
{ after(grammarAccess.getProvidedMethodAccess().getIsSynchronizedAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProvidedMethod__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProvidedMethod__Group__2__Impl
	rule__ProvidedMethod__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProvidedMethod__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedMethodAccess().getReturnTypeAssignment_2()); }
(rule__ProvidedMethod__ReturnTypeAssignment_2)
{ after(grammarAccess.getProvidedMethodAccess().getReturnTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProvidedMethod__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProvidedMethod__Group__3__Impl
	rule__ProvidedMethod__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ProvidedMethod__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedMethodAccess().getMethodRefAssignment_3()); }
(rule__ProvidedMethod__MethodRefAssignment_3)
{ after(grammarAccess.getProvidedMethodAccess().getMethodRefAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProvidedMethod__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProvidedMethod__Group__4__Impl
	rule__ProvidedMethod__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ProvidedMethod__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedMethodAccess().getLeftParenthesisKeyword_4()); }

	'(' 

{ after(grammarAccess.getProvidedMethodAccess().getLeftParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProvidedMethod__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProvidedMethod__Group__5__Impl
	rule__ProvidedMethod__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ProvidedMethod__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedMethodAccess().getGroup_5()); }
(rule__ProvidedMethod__Group_5__0)?
{ after(grammarAccess.getProvidedMethodAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProvidedMethod__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProvidedMethod__Group__6__Impl
	rule__ProvidedMethod__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ProvidedMethod__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedMethodAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getProvidedMethodAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProvidedMethod__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProvidedMethod__Group__7__Impl
	rule__ProvidedMethod__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ProvidedMethod__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedMethodAccess().getLeftCurlyBracketKeyword_7()); }

	'{' 

{ after(grammarAccess.getProvidedMethodAccess().getLeftCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProvidedMethod__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProvidedMethod__Group__8__Impl
	rule__ProvidedMethod__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ProvidedMethod__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedMethodAccess().getBlockAssignment_8()); }
(rule__ProvidedMethod__BlockAssignment_8)
{ after(grammarAccess.getProvidedMethodAccess().getBlockAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProvidedMethod__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProvidedMethod__Group__9__Impl
	rule__ProvidedMethod__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__ProvidedMethod__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedMethodAccess().getReturnStatementAssignment_9()); }
(rule__ProvidedMethod__ReturnStatementAssignment_9)?
{ after(grammarAccess.getProvidedMethodAccess().getReturnStatementAssignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProvidedMethod__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProvidedMethod__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProvidedMethod__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedMethodAccess().getRightCurlyBracketKeyword_10()); }

	'}' 

{ after(grammarAccess.getProvidedMethodAccess().getRightCurlyBracketKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__ProvidedMethod__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProvidedMethod__Group_5__0__Impl
	rule__ProvidedMethod__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProvidedMethod__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedMethodAccess().getParameterListAssignment_5_0()); }
(rule__ProvidedMethod__ParameterListAssignment_5_0)
{ after(grammarAccess.getProvidedMethodAccess().getParameterListAssignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProvidedMethod__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProvidedMethod__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProvidedMethod__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedMethodAccess().getGroup_5_1()); }
(rule__ProvidedMethod__Group_5_1__0)*
{ after(grammarAccess.getProvidedMethodAccess().getGroup_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ProvidedMethod__Group_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProvidedMethod__Group_5_1__0__Impl
	rule__ProvidedMethod__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProvidedMethod__Group_5_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedMethodAccess().getCommaKeyword_5_1_0()); }

	',' 

{ after(grammarAccess.getProvidedMethodAccess().getCommaKeyword_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProvidedMethod__Group_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProvidedMethod__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProvidedMethod__Group_5_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedMethodAccess().getParameterListAssignment_5_1_1()); }
(rule__ProvidedMethod__ParameterListAssignment_5_1_1)
{ after(grammarAccess.getProvidedMethodAccess().getParameterListAssignment_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Constructor__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor__Group__0__Impl
	rule__Constructor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getNameAssignment_0()); }
(rule__Constructor__NameAssignment_0)
{ after(grammarAccess.getConstructorAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor__Group__1__Impl
	rule__Constructor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getConstructorAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor__Group__2__Impl
	rule__Constructor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getGroup_2()); }
(rule__Constructor__Group_2__0)?
{ after(grammarAccess.getConstructorAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor__Group__3__Impl
	rule__Constructor__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getConstructorAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor__Group__4__Impl
	rule__Constructor__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getConstructorAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor__Group__5__Impl
	rule__Constructor__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getBlockAssignment_5()); }
(rule__Constructor__BlockAssignment_5)
{ after(grammarAccess.getConstructorAccess().getBlockAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getConstructorAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Constructor__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor__Group_2__0__Impl
	rule__Constructor__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getParameterListAssignment_2_0()); }
(rule__Constructor__ParameterListAssignment_2_0)
{ after(grammarAccess.getConstructorAccess().getParameterListAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getGroup_2_1()); }
(rule__Constructor__Group_2_1__0)*
{ after(grammarAccess.getConstructorAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Constructor__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor__Group_2_1__0__Impl
	rule__Constructor__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getConstructorAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getParameterListAssignment_2_1_1()); }
(rule__Constructor__ParameterListAssignment_2_1_1)
{ after(grammarAccess.getConstructorAccess().getParameterListAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReturnStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnStatement__Group__0__Impl
	rule__ReturnStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStatementAccess().getReturnKeyword_0()); }

	'return' 

{ after(grammarAccess.getReturnStatementAccess().getReturnKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnStatement__Group__1__Impl
	rule__ReturnStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStatementAccess().getExpressionAssignment_1()); }
(rule__ReturnStatement__ExpressionAssignment_1)
{ after(grammarAccess.getReturnStatementAccess().getExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStatementAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getReturnStatementAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Parameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getFormalParameterAction_0()); }
(

)
{ after(grammarAccess.getParameterAccess().getFormalParameterAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__1__Impl
	rule__Parameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getTypeAssignment_1()); }
(rule__Parameter__TypeAssignment_1)
{ after(grammarAccess.getParameterAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getNameAssignment_2()); }
(rule__Parameter__NameAssignment_2)
{ after(grammarAccess.getParameterAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Block__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__0__Impl
	rule__Block__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getBlockAction_0()); }
(

)
{ after(grammarAccess.getBlockAccess().getBlockAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__1__Impl
	rule__Block__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getParameterListAssignment_1()); }
(rule__Block__ParameterListAssignment_1)*
{ after(grammarAccess.getBlockAccess().getParameterListAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getStatementListAssignment_2()); }
(rule__Block__StatementListAssignment_2)*
{ after(grammarAccess.getBlockAccess().getStatementListAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExpressionStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionStatement__Group__0__Impl
	rule__ExpressionStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionStatementAccess().getExpressionAssignment_0()); }
(rule__ExpressionStatement__ExpressionAssignment_0)
{ after(grammarAccess.getExpressionStatementAccess().getExpressionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionStatementAccess().getSemicolonKeyword_1()); }

	';' 

{ after(grammarAccess.getExpressionStatementAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IfThenElseStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfThenElseStatement__Group__0__Impl
	rule__IfThenElseStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElseStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseStatementAccess().getIfKeyword_0()); }

	'if' 

{ after(grammarAccess.getIfThenElseStatementAccess().getIfKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfThenElseStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfThenElseStatement__Group__1__Impl
	rule__IfThenElseStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElseStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseStatementAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getIfThenElseStatementAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfThenElseStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfThenElseStatement__Group__2__Impl
	rule__IfThenElseStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElseStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseStatementAccess().getCondictionAssignment_2()); }
(rule__IfThenElseStatement__CondictionAssignment_2)
{ after(grammarAccess.getIfThenElseStatementAccess().getCondictionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfThenElseStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfThenElseStatement__Group__3__Impl
	rule__IfThenElseStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElseStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseStatementAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getIfThenElseStatementAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfThenElseStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfThenElseStatement__Group__4__Impl
	rule__IfThenElseStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElseStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseStatementAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getIfThenElseStatementAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfThenElseStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfThenElseStatement__Group__5__Impl
	rule__IfThenElseStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElseStatement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseStatementAccess().getTrueBranchAssignment_5()); }
(rule__IfThenElseStatement__TrueBranchAssignment_5)
{ after(grammarAccess.getIfThenElseStatementAccess().getTrueBranchAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfThenElseStatement__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfThenElseStatement__Group__6__Impl
	rule__IfThenElseStatement__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElseStatement__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseStatementAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getIfThenElseStatementAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfThenElseStatement__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfThenElseStatement__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElseStatement__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseStatementAccess().getGroup_7()); }
(rule__IfThenElseStatement__Group_7__0)?
{ after(grammarAccess.getIfThenElseStatementAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__IfThenElseStatement__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfThenElseStatement__Group_7__0__Impl
	rule__IfThenElseStatement__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElseStatement__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseStatementAccess().getElseKeyword_7_0()); }

	'else' 

{ after(grammarAccess.getIfThenElseStatementAccess().getElseKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfThenElseStatement__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfThenElseStatement__Group_7__1__Impl
	rule__IfThenElseStatement__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElseStatement__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseStatementAccess().getLeftCurlyBracketKeyword_7_1()); }

	'{' 

{ after(grammarAccess.getIfThenElseStatementAccess().getLeftCurlyBracketKeyword_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfThenElseStatement__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfThenElseStatement__Group_7__2__Impl
	rule__IfThenElseStatement__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElseStatement__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseStatementAccess().getFalseBranchAssignment_7_2()); }
(rule__IfThenElseStatement__FalseBranchAssignment_7_2)
{ after(grammarAccess.getIfThenElseStatementAccess().getFalseBranchAssignment_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfThenElseStatement__Group_7__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfThenElseStatement__Group_7__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElseStatement__Group_7__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseStatementAccess().getRightCurlyBracketKeyword_7_3()); }

	'}' 

{ after(grammarAccess.getIfThenElseStatementAccess().getRightCurlyBracketKeyword_7_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__WhileStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileStatement__Group__0__Impl
	rule__WhileStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getWhileKeyword_0()); }

	'while' 

{ after(grammarAccess.getWhileStatementAccess().getWhileKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileStatement__Group__1__Impl
	rule__WhileStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getWhileStatementAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileStatement__Group__2__Impl
	rule__WhileStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getCondictionAssignment_2()); }
(rule__WhileStatement__CondictionAssignment_2)
{ after(grammarAccess.getWhileStatementAccess().getCondictionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileStatement__Group__3__Impl
	rule__WhileStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getWhileStatementAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileStatement__Group__4__Impl
	rule__WhileStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getWhileStatementAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileStatement__Group__5__Impl
	rule__WhileStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getWhileBlockAssignment_5()); }
(rule__WhileStatement__WhileBlockAssignment_5)
{ after(grammarAccess.getWhileStatementAccess().getWhileBlockAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileStatement__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getWhileStatementAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__BooleanExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanExpression__Group__0__Impl
	rule__BooleanExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanExpressionAccess().getBooleanExpressionAction_0()); }
(

)
{ after(grammarAccess.getBooleanExpressionAccess().getBooleanExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanExpression__Group__1__Impl
	rule__BooleanExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanExpressionAccess().getAtomicListAssignment_1()); }
(rule__BooleanExpression__AtomicListAssignment_1)
{ after(grammarAccess.getBooleanExpressionAccess().getAtomicListAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanExpressionAccess().getGroup_2()); }
(rule__BooleanExpression__Group_2__0)*
{ after(grammarAccess.getBooleanExpressionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BooleanExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanExpression__Group_2__0__Impl
	rule__BooleanExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanExpressionAccess().getBooleanOperatorListAssignment_2_0()); }
(rule__BooleanExpression__BooleanOperatorListAssignment_2_0)
{ after(grammarAccess.getBooleanExpressionAccess().getBooleanOperatorListAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanExpressionAccess().getAtomicListAssignment_2_1()); }
(rule__BooleanExpression__AtomicListAssignment_2_1)
{ after(grammarAccess.getBooleanExpressionAccess().getAtomicListAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SimpleComparation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleComparation__Group__0__Impl
	rule__SimpleComparation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleComparation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleComparationAccess().getNegatedAssignment_0()); }
(rule__SimpleComparation__NegatedAssignment_0)?
{ after(grammarAccess.getSimpleComparationAccess().getNegatedAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleComparation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleComparation__Group__1__Impl
	rule__SimpleComparation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleComparation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleComparationAccess().getLeftExpressionAssignment_1()); }
(rule__SimpleComparation__LeftExpressionAssignment_1)
{ after(grammarAccess.getSimpleComparationAccess().getLeftExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleComparation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleComparation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleComparation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleComparationAccess().getGroup_2()); }
(rule__SimpleComparation__Group_2__0)?
{ after(grammarAccess.getSimpleComparationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SimpleComparation__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleComparation__Group_2__0__Impl
	rule__SimpleComparation__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleComparation__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleComparationAccess().getCompareAssignment_2_0()); }
(rule__SimpleComparation__CompareAssignment_2_0)
{ after(grammarAccess.getSimpleComparationAccess().getCompareAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleComparation__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleComparation__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleComparation__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleComparationAccess().getRightExpressionAssignment_2_1()); }
(rule__SimpleComparation__RightExpressionAssignment_2_1)
{ after(grammarAccess.getSimpleComparationAccess().getRightExpressionAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NestedBooleanExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedBooleanExpression__Group__0__Impl
	rule__NestedBooleanExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedBooleanExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedBooleanExpressionAccess().getNegatedAssignment_0()); }
(rule__NestedBooleanExpression__NegatedAssignment_0)?
{ after(grammarAccess.getNestedBooleanExpressionAccess().getNegatedAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NestedBooleanExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedBooleanExpression__Group__1__Impl
	rule__NestedBooleanExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedBooleanExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedBooleanExpressionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getNestedBooleanExpressionAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NestedBooleanExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedBooleanExpression__Group__2__Impl
	rule__NestedBooleanExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedBooleanExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedBooleanExpressionAccess().getNestedExpressionAssignment_2()); }
(rule__NestedBooleanExpression__NestedExpressionAssignment_2)
{ after(grammarAccess.getNestedBooleanExpressionAccess().getNestedExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NestedBooleanExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedBooleanExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedBooleanExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedBooleanExpressionAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getNestedBooleanExpressionAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__LocalParameter__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalParameter__Group_0__0__Impl
	rule__LocalParameter__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalParameter__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalParameterAccess().getLocalParameterAction_0_0()); }
(

)
{ after(grammarAccess.getLocalParameterAccess().getLocalParameterAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalParameter__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalParameter__Group_0__1__Impl
	rule__LocalParameter__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalParameter__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalParameterAccess().getTypeAssignment_0_1()); }
(rule__LocalParameter__TypeAssignment_0_1)
{ after(grammarAccess.getLocalParameterAccess().getTypeAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalParameter__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalParameter__Group_0__2__Impl
	rule__LocalParameter__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalParameter__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalParameterAccess().getNameAssignment_0_2()); }
(rule__LocalParameter__NameAssignment_0_2)
{ after(grammarAccess.getLocalParameterAccess().getNameAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalParameter__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalParameter__Group_0__3__Impl
	rule__LocalParameter__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalParameter__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalParameterAccess().getEqualsSignKeyword_0_3()); }

	'=' 

{ after(grammarAccess.getLocalParameterAccess().getEqualsSignKeyword_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalParameter__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalParameter__Group_0__4__Impl
	rule__LocalParameter__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalParameter__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalParameterAccess().getValueAssignment_0_4()); }
(rule__LocalParameter__ValueAssignment_0_4)
{ after(grammarAccess.getLocalParameterAccess().getValueAssignment_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalParameter__Group_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalParameter__Group_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalParameter__Group_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalParameterAccess().getSemicolonKeyword_0_5()); }

	';' 

{ after(grammarAccess.getLocalParameterAccess().getSemicolonKeyword_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__LocalParameter__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalParameter__Group_1__0__Impl
	rule__LocalParameter__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalParameter__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalParameterAccess().getLocalParameterAction_1_0()); }
(

)
{ after(grammarAccess.getLocalParameterAccess().getLocalParameterAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalParameter__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalParameter__Group_1__1__Impl
	rule__LocalParameter__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalParameter__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalParameterAccess().getTypeAssignment_1_1()); }
(rule__LocalParameter__TypeAssignment_1_1)
{ after(grammarAccess.getLocalParameterAccess().getTypeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalParameter__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalParameter__Group_1__2__Impl
	rule__LocalParameter__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalParameter__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalParameterAccess().getNameAssignment_1_2()); }
(rule__LocalParameter__NameAssignment_1_2)
{ after(grammarAccess.getLocalParameterAccess().getNameAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalParameter__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalParameter__Group_1__3__Impl
	rule__LocalParameter__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalParameter__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalParameterAccess().getEqualsSignKeyword_1_3()); }

	'=' 

{ after(grammarAccess.getLocalParameterAccess().getEqualsSignKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalParameter__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalParameter__Group_1__4__Impl
	rule__LocalParameter__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalParameter__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalParameterAccess().getValueAssignment_1_4()); }
(rule__LocalParameter__ValueAssignment_1_4)
{ after(grammarAccess.getLocalParameterAccess().getValueAssignment_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalParameter__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalParameter__Group_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalParameter__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalParameterAccess().getSemicolonKeyword_1_5()); }

	';' 

{ after(grammarAccess.getLocalParameterAccess().getSemicolonKeyword_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__0__Impl
	rule__Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExpressionAction_0()); }
(

)
{ after(grammarAccess.getExpressionAccess().getExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__1__Impl
	rule__Expression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getAlternatives_1()); }
(rule__Expression__Alternatives_1)?
{ after(grammarAccess.getExpressionAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__2__Impl
	rule__Expression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getTermListAssignment_2()); }
(rule__Expression__TermListAssignment_2)
{ after(grammarAccess.getExpressionAccess().getTermListAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getGroup_3()); }
(rule__Expression__Group_3__0)*
{ after(grammarAccess.getExpressionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Expression__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_3__0__Impl
	rule__Expression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getOperatorListAssignment_3_0()); }
(rule__Expression__OperatorListAssignment_3_0)
{ after(grammarAccess.getExpressionAccess().getOperatorListAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getTermListAssignment_3_1()); }
(rule__Expression__TermListAssignment_3_1)
{ after(grammarAccess.getExpressionAccess().getTermListAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DottedExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DottedExpression__Group__0__Impl
	rule__DottedExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DottedExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDottedExpressionAccess().getStartAssignment_0()); }
(rule__DottedExpression__StartAssignment_0)
{ after(grammarAccess.getDottedExpressionAccess().getStartAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DottedExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DottedExpression__Group__1__Impl
	rule__DottedExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DottedExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDottedExpressionAccess().getGroup_1()); }
(rule__DottedExpression__Group_1__0)*
{ after(grammarAccess.getDottedExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DottedExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DottedExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DottedExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDottedExpressionAccess().getGroup_2()); }
(rule__DottedExpression__Group_2__0)?
{ after(grammarAccess.getDottedExpressionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DottedExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DottedExpression__Group_1__0__Impl
	rule__DottedExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DottedExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDottedExpressionAccess().getDottedExpressionReceiverAction_1_0()); }
(

)
{ after(grammarAccess.getDottedExpressionAccess().getDottedExpressionReceiverAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DottedExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DottedExpression__Group_1__1__Impl
	rule__DottedExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DottedExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDottedExpressionAccess().getFullStopKeyword_1_1()); }

	'.' 

{ after(grammarAccess.getDottedExpressionAccess().getFullStopKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DottedExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DottedExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DottedExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDottedExpressionAccess().getMessageAssignment_1_2()); }
(rule__DottedExpression__MessageAssignment_1_2)
{ after(grammarAccess.getDottedExpressionAccess().getMessageAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DottedExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DottedExpression__Group_2__0__Impl
	rule__DottedExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DottedExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDottedExpressionAccess().getDottedExpressionReceiverAction_2_0()); }
(

)
{ after(grammarAccess.getDottedExpressionAccess().getDottedExpressionReceiverAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DottedExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DottedExpression__Group_2__1__Impl
	rule__DottedExpression__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DottedExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDottedExpressionAccess().getFullStopKeyword_2_1()); }

	'.' 

{ after(grammarAccess.getDottedExpressionAccess().getFullStopKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DottedExpression__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DottedExpression__Group_2__2__Impl
	rule__DottedExpression__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DottedExpression__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDottedExpressionAccess().getMessageAssignment_2_2()); }
(rule__DottedExpression__MessageAssignment_2_2)
{ after(grammarAccess.getDottedExpressionAccess().getMessageAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DottedExpression__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DottedExpression__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DottedExpression__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDottedExpressionAccess().getGroup_2_3()); }
(rule__DottedExpression__Group_2_3__0)?
{ after(grammarAccess.getDottedExpressionAccess().getGroup_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__DottedExpression__Group_2_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DottedExpression__Group_2_3__0__Impl
	rule__DottedExpression__Group_2_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DottedExpression__Group_2_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDottedExpressionAccess().getEqualsSignKeyword_2_3_0()); }

	'=' 

{ after(grammarAccess.getDottedExpressionAccess().getEqualsSignKeyword_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DottedExpression__Group_2_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DottedExpression__Group_2_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DottedExpression__Group_2_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDottedExpressionAccess().getAlternatives_2_3_1()); }
(rule__DottedExpression__Alternatives_2_3_1)
{ after(grammarAccess.getDottedExpressionAccess().getAlternatives_2_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConstructorInvocation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorInvocation__Group__0__Impl
	rule__ConstructorInvocation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorInvocation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorInvocationAccess().getNewKeyword_0()); }

	'new' 

{ after(grammarAccess.getConstructorInvocationAccess().getNewKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorInvocation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorInvocation__Group__1__Impl
	rule__ConstructorInvocation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorInvocation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorInvocationAccess().getClassRefAssignment_1()); }
(rule__ConstructorInvocation__ClassRefAssignment_1)
{ after(grammarAccess.getConstructorInvocationAccess().getClassRefAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorInvocation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorInvocation__Group__2__Impl
	rule__ConstructorInvocation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorInvocation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorInvocationAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getConstructorInvocationAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorInvocation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorInvocation__Group__3__Impl
	rule__ConstructorInvocation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorInvocation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorInvocationAccess().getGroup_3()); }
(rule__ConstructorInvocation__Group_3__0)?
{ after(grammarAccess.getConstructorInvocationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorInvocation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorInvocation__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorInvocation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorInvocationAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getConstructorInvocationAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ConstructorInvocation__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorInvocation__Group_3__0__Impl
	rule__ConstructorInvocation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorInvocation__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorInvocationAccess().getGroup_3_0()); }
(rule__ConstructorInvocation__Group_3_0__0)*
{ after(grammarAccess.getConstructorInvocationAccess().getGroup_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorInvocation__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorInvocation__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorInvocation__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorInvocationAccess().getAlternatives_3_1()); }
(rule__ConstructorInvocation__Alternatives_3_1)
{ after(grammarAccess.getConstructorInvocationAccess().getAlternatives_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConstructorInvocation__Group_3_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorInvocation__Group_3_0__0__Impl
	rule__ConstructorInvocation__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorInvocation__Group_3_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorInvocationAccess().getAlternatives_3_0_0()); }
(rule__ConstructorInvocation__Alternatives_3_0_0)
{ after(grammarAccess.getConstructorInvocationAccess().getAlternatives_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorInvocation__Group_3_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorInvocation__Group_3_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorInvocation__Group_3_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorInvocationAccess().getCommaKeyword_3_0_1()); }

	',' 

{ after(grammarAccess.getConstructorInvocationAccess().getCommaKeyword_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Cast__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cast__Group__0__Impl
	rule__Cast__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getCastAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cast__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cast__Group__1__Impl
	rule__Cast__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastAccess().getTypeAssignment_1()); }
(rule__Cast__TypeAssignment_1)
{ after(grammarAccess.getCastAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cast__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cast__Group__2__Impl
	rule__Cast__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getCastAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cast__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cast__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastAccess().getStartAssignment_3()); }
(rule__Cast__StartAssignment_3)
{ after(grammarAccess.getCastAccess().getStartAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__NestedExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedExpression__Group__0__Impl
	rule__NestedExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedExpressionAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getNestedExpressionAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NestedExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedExpression__Group__1__Impl
	rule__NestedExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedExpressionAccess().getExpressionAssignment_1()); }
(rule__NestedExpression__ExpressionAssignment_1)
{ after(grammarAccess.getNestedExpressionAccess().getExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NestedExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedExpressionAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getNestedExpressionAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MethodInvocation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodInvocation__Group__0__Impl
	rule__MethodInvocation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodInvocationAccess().getMethodAssignment_0()); }
(rule__MethodInvocation__MethodAssignment_0)
{ after(grammarAccess.getMethodInvocationAccess().getMethodAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodInvocation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodInvocation__Group__1__Impl
	rule__MethodInvocation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodInvocationAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getMethodInvocationAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodInvocation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodInvocation__Group__2__Impl
	rule__MethodInvocation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodInvocationAccess().getGroup_2()); }
(rule__MethodInvocation__Group_2__0)?
{ after(grammarAccess.getMethodInvocationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodInvocation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodInvocation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodInvocationAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getMethodInvocationAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MethodInvocation__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodInvocation__Group_2__0__Impl
	rule__MethodInvocation__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodInvocationAccess().getAlternatives_2_0()); }
(rule__MethodInvocation__Alternatives_2_0)
{ after(grammarAccess.getMethodInvocationAccess().getAlternatives_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodInvocation__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodInvocation__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodInvocationAccess().getGroup_2_1()); }
(rule__MethodInvocation__Group_2_1__0)*
{ after(grammarAccess.getMethodInvocationAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MethodInvocation__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodInvocation__Group_2_1__0__Impl
	rule__MethodInvocation__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodInvocationAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getMethodInvocationAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodInvocation__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodInvocation__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodInvocationAccess().getAlternatives_2_1_1()); }
(rule__MethodInvocation__Alternatives_2_1_1)
{ after(grammarAccess.getMethodInvocationAccess().getAlternatives_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParameterAssignment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterAssignment__Group__0__Impl
	rule__ParameterAssignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterAssignment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAssignmentAccess().getParameterAssignment_0()); }
(rule__ParameterAssignment__ParameterAssignment_0)
{ after(grammarAccess.getParameterAssignmentAccess().getParameterAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterAssignment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterAssignment__Group__1__Impl
	rule__ParameterAssignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterAssignment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAssignmentAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getParameterAssignmentAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterAssignment__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterAssignment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterAssignment__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAssignmentAccess().getAlternatives_2()); }
(rule__ParameterAssignment__Alternatives_2)
{ after(grammarAccess.getParameterAssignmentAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__File__ImportListAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileAccess().getImportListImportParserRuleCall_0_0()); }
	ruleImport{ after(grammarAccess.getFileAccess().getImportListImportParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__File__ElementListAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileAccess().getElementListElementParserRuleCall_1_0()); }
	ruleElement{ after(grammarAccess.getFileAccess().getElementListElementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportURIAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__ConstructAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getConstructInterfaceKeyword_0_0()); }
(
{ before(grammarAccess.getInterfaceAccess().getConstructInterfaceKeyword_0_0()); }

	'interface' 

{ after(grammarAccess.getInterfaceAccess().getConstructInterfaceKeyword_0_0()); }
)

{ after(grammarAccess.getInterfaceAccess().getConstructInterfaceKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getInterfaceAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__ExtendsListAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getExtendsListInterfaceCrossReference_2_1_0()); }
(
{ before(grammarAccess.getInterfaceAccess().getExtendsListInterfaceIDTerminalRuleCall_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getInterfaceAccess().getExtendsListInterfaceIDTerminalRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getInterfaceAccess().getExtendsListInterfaceCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__ExtendsListAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getExtendsListInterfaceCrossReference_2_2_1_0()); }
(
{ before(grammarAccess.getInterfaceAccess().getExtendsListInterfaceIDTerminalRuleCall_2_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getInterfaceAccess().getExtendsListInterfaceIDTerminalRuleCall_2_2_1_0_1()); }
)
{ after(grammarAccess.getInterfaceAccess().getExtendsListInterfaceCrossReference_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__RequiredMethodListAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getRequiredMethodListRequiredMethodParserRuleCall_4_0()); }
	ruleRequiredMethod{ after(grammarAccess.getInterfaceAccess().getRequiredMethodListRequiredMethodParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Record__ConstructAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordAccess().getConstructRecordKeyword_0_0()); }
(
{ before(grammarAccess.getRecordAccess().getConstructRecordKeyword_0_0()); }

	'record' 

{ after(grammarAccess.getRecordAccess().getConstructRecordKeyword_0_0()); }
)

{ after(grammarAccess.getRecordAccess().getConstructRecordKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Record__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getRecordAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Record__ExpressionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordAccess().getExpressionRecordExpressionParserRuleCall_3_0()); }
	ruleRecordExpression{ after(grammarAccess.getRecordAccess().getExpressionRecordExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Trait__ConstructAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitAccess().getConstructTraitKeyword_0_0()); }
(
{ before(grammarAccess.getTraitAccess().getConstructTraitKeyword_0_0()); }

	'trait' 

{ after(grammarAccess.getTraitAccess().getConstructTraitKeyword_0_0()); }
)

{ after(grammarAccess.getTraitAccess().getConstructTraitKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Trait__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getTraitAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Trait__ExpressionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitAccess().getExpressionTraitExpressionParserRuleCall_3_0()); }
	ruleTraitExpression{ after(grammarAccess.getTraitAccess().getExpressionTraitExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__ConstructAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getConstructClassKeyword_0_0()); }
(
{ before(grammarAccess.getClassAccess().getConstructClassKeyword_0_0()); }

	'class' 

{ after(grammarAccess.getClassAccess().getConstructClassKeyword_0_0()); }
)

{ after(grammarAccess.getClassAccess().getConstructClassKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getClassAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__ImplementsListAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getImplementsListInterfaceCrossReference_3_0()); }
(
{ before(grammarAccess.getClassAccess().getImplementsListInterfaceIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getClassAccess().getImplementsListInterfaceIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getClassAccess().getImplementsListInterfaceCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__ImplementsListAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getImplementsListInterfaceCrossReference_4_1_0()); }
(
{ before(grammarAccess.getClassAccess().getImplementsListInterfaceIDTerminalRuleCall_4_1_0_1()); }
	RULE_ID{ after(grammarAccess.getClassAccess().getImplementsListInterfaceIDTerminalRuleCall_4_1_0_1()); }
)
{ after(grammarAccess.getClassAccess().getImplementsListInterfaceCrossReference_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__RecordExpressionAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getRecordExpressionRecordExpressionParserRuleCall_6_0()); }
	ruleRecordExpression{ after(grammarAccess.getClassAccess().getRecordExpressionRecordExpressionParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__TraitExpressionAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getTraitExpressionTraitExpressionParserRuleCall_8_0()); }
	ruleTraitExpression{ after(grammarAccess.getClassAccess().getTraitExpressionTraitExpressionParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__ConstructorListAssignment_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getConstructorListConstructorParserRuleCall_10_0()); }
	ruleConstructor{ after(grammarAccess.getClassAccess().getConstructorListConstructorParserRuleCall_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Program__ConstructAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getConstructProgramKeyword_0_0()); }
(
{ before(grammarAccess.getProgramAccess().getConstructProgramKeyword_0_0()); }

	'program' 

{ after(grammarAccess.getProgramAccess().getConstructProgramKeyword_0_0()); }
)

{ after(grammarAccess.getProgramAccess().getConstructProgramKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Program__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getProgramAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Program__BlockAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getBlockBlockParserRuleCall_3_0()); }
	ruleBlock{ after(grammarAccess.getProgramAccess().getBlockBlockParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordExpression__RecordListAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordExpressionAccess().getRecordListBaseRecordParserRuleCall_0_0()); }
	ruleBaseRecord{ after(grammarAccess.getRecordExpressionAccess().getRecordListBaseRecordParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordExpression__RecordListAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordExpressionAccess().getRecordListBaseRecordParserRuleCall_1_1_0()); }
	ruleBaseRecord{ after(grammarAccess.getRecordExpressionAccess().getRecordListBaseRecordParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnonimousRecord__DeclarationListAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnonimousRecordAccess().getDeclarationListFieldDeclarationParserRuleCall_2_0()); }
	ruleFieldDeclaration{ after(grammarAccess.getAnonimousRecordAccess().getDeclarationListFieldDeclarationParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnonimousRecord__OperationListAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnonimousRecordAccess().getOperationListRecordOperationParserRuleCall_4_1_0()); }
	ruleRecordOperation{ after(grammarAccess.getAnonimousRecordAccess().getOperationListRecordOperationParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnonimousRecord__OperationListAssignment_4_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnonimousRecordAccess().getOperationListRecordOperationParserRuleCall_4_2_1_0()); }
	ruleRecordOperation{ after(grammarAccess.getAnonimousRecordAccess().getOperationListRecordOperationParserRuleCall_4_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordName__RecordAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordNameAccess().getRecordRecordCrossReference_0_0()); }
(
{ before(grammarAccess.getRecordNameAccess().getRecordRecordIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getRecordNameAccess().getRecordRecordIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getRecordNameAccess().getRecordRecordCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordName__OperationListAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordNameAccess().getOperationListRecordOperationParserRuleCall_1_1_0()); }
	ruleRecordOperation{ after(grammarAccess.getRecordNameAccess().getOperationListRecordOperationParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordName__OperationListAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordNameAccess().getOperationListRecordOperationParserRuleCall_1_2_1_0()); }
	ruleRecordOperation{ after(grammarAccess.getRecordNameAccess().getOperationListRecordOperationParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NestedRecordExpression__ExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedRecordExpressionAccess().getExpressionRecordExpressionParserRuleCall_1_0()); }
	ruleRecordExpression{ after(grammarAccess.getNestedRecordExpressionAccess().getExpressionRecordExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NestedRecordExpression__OperationListAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedRecordExpressionAccess().getOperationListRecordOperationParserRuleCall_3_1_0()); }
	ruleRecordOperation{ after(grammarAccess.getNestedRecordExpressionAccess().getOperationListRecordOperationParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NestedRecordExpression__OperationListAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedRecordExpressionAccess().getOperationListRecordOperationParserRuleCall_3_2_1_0()); }
	ruleRecordOperation{ after(grammarAccess.getNestedRecordExpressionAccess().getOperationListRecordOperationParserRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordOperation__FieldAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordOperationAccess().getFieldFieldNameCrossReference_0_2_0()); }
(
{ before(grammarAccess.getRecordOperationAccess().getFieldFieldNameIDTerminalRuleCall_0_2_0_1()); }
	RULE_ID{ after(grammarAccess.getRecordOperationAccess().getFieldFieldNameIDTerminalRuleCall_0_2_0_1()); }
)
{ after(grammarAccess.getRecordOperationAccess().getFieldFieldNameCrossReference_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordOperation__OriginalFieldAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordOperationAccess().getOriginalFieldFieldNameCrossReference_1_1_0()); }
(
{ before(grammarAccess.getRecordOperationAccess().getOriginalFieldFieldNameIDTerminalRuleCall_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getRecordOperationAccess().getOriginalFieldFieldNameIDTerminalRuleCall_1_1_0_1()); }
)
{ after(grammarAccess.getRecordOperationAccess().getOriginalFieldFieldNameCrossReference_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordOperation__NewFieldAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordOperationAccess().getNewFieldFieldNameParserRuleCall_1_3_0()); }
	ruleFieldName{ after(grammarAccess.getRecordOperationAccess().getNewFieldFieldNameParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordOperation__OriginalFieldAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordOperationAccess().getOriginalFieldFieldNameCrossReference_2_1_0()); }
(
{ before(grammarAccess.getRecordOperationAccess().getOriginalFieldFieldNameIDTerminalRuleCall_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getRecordOperationAccess().getOriginalFieldFieldNameIDTerminalRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getRecordOperationAccess().getOriginalFieldFieldNameCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordOperation__NewFieldAssignment_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordOperationAccess().getNewFieldFieldNameParserRuleCall_2_3_0()); }
	ruleFieldName{ after(grammarAccess.getRecordOperationAccess().getNewFieldFieldNameParserRuleCall_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TraitExpression__TraitListAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitExpressionAccess().getTraitListBaseTraitParserRuleCall_0_0()); }
	ruleBaseTrait{ after(grammarAccess.getTraitExpressionAccess().getTraitListBaseTraitParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TraitExpression__TraitListAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitExpressionAccess().getTraitListBaseTraitParserRuleCall_1_1_0()); }
	ruleBaseTrait{ after(grammarAccess.getTraitExpressionAccess().getTraitListBaseTraitParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnonimousTrait__DefinitionListAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnonimousTraitAccess().getDefinitionListTraitElementParserRuleCall_2_0()); }
	ruleTraitElement{ after(grammarAccess.getAnonimousTraitAccess().getDefinitionListTraitElementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnonimousTrait__OperationListAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnonimousTraitAccess().getOperationListTraitOperationParserRuleCall_4_1_0()); }
	ruleTraitOperation{ after(grammarAccess.getAnonimousTraitAccess().getOperationListTraitOperationParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnonimousTrait__OperationListAssignment_4_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnonimousTraitAccess().getOperationListTraitOperationParserRuleCall_4_2_1_0()); }
	ruleTraitOperation{ after(grammarAccess.getAnonimousTraitAccess().getOperationListTraitOperationParserRuleCall_4_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TraitName__TraitAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitNameAccess().getTraitTraitCrossReference_0_0()); }
(
{ before(grammarAccess.getTraitNameAccess().getTraitTraitIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getTraitNameAccess().getTraitTraitIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getTraitNameAccess().getTraitTraitCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TraitName__OperationListAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitNameAccess().getOperationListTraitOperationParserRuleCall_1_1_0()); }
	ruleTraitOperation{ after(grammarAccess.getTraitNameAccess().getOperationListTraitOperationParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TraitName__OperationListAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitNameAccess().getOperationListTraitOperationParserRuleCall_1_2_1_0()); }
	ruleTraitOperation{ after(grammarAccess.getTraitNameAccess().getOperationListTraitOperationParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NestedTraitExpression__ExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedTraitExpressionAccess().getExpressionTraitExpressionParserRuleCall_1_0()); }
	ruleTraitExpression{ after(grammarAccess.getNestedTraitExpressionAccess().getExpressionTraitExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NestedTraitExpression__OperationListAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedTraitExpressionAccess().getOperationListTraitOperationParserRuleCall_3_1_0()); }
	ruleTraitOperation{ after(grammarAccess.getNestedTraitExpressionAccess().getOperationListTraitOperationParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NestedTraitExpression__OperationListAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedTraitExpressionAccess().getOperationListTraitOperationParserRuleCall_3_2_1_0()); }
	ruleTraitOperation{ after(grammarAccess.getNestedTraitExpressionAccess().getOperationListTraitOperationParserRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TraitOperation__MethodAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitOperationAccess().getMethodMethodNameCrossReference_0_2_0()); }
(
{ before(grammarAccess.getTraitOperationAccess().getMethodMethodNameIDTerminalRuleCall_0_2_0_1()); }
	RULE_ID{ after(grammarAccess.getTraitOperationAccess().getMethodMethodNameIDTerminalRuleCall_0_2_0_1()); }
)
{ after(grammarAccess.getTraitOperationAccess().getMethodMethodNameCrossReference_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TraitOperation__OriginalMethodAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitOperationAccess().getOriginalMethodMethodNameCrossReference_1_1_0()); }
(
{ before(grammarAccess.getTraitOperationAccess().getOriginalMethodMethodNameIDTerminalRuleCall_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getTraitOperationAccess().getOriginalMethodMethodNameIDTerminalRuleCall_1_1_0_1()); }
)
{ after(grammarAccess.getTraitOperationAccess().getOriginalMethodMethodNameCrossReference_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TraitOperation__NewMethodAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitOperationAccess().getNewMethodMethodNameParserRuleCall_1_3_0()); }
	ruleMethodName{ after(grammarAccess.getTraitOperationAccess().getNewMethodMethodNameParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TraitOperation__OriginalMethodAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitOperationAccess().getOriginalMethodMethodNameCrossReference_2_1_0()); }
(
{ before(grammarAccess.getTraitOperationAccess().getOriginalMethodMethodNameIDTerminalRuleCall_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getTraitOperationAccess().getOriginalMethodMethodNameIDTerminalRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getTraitOperationAccess().getOriginalMethodMethodNameCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TraitOperation__NewMethodAssignment_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitOperationAccess().getNewMethodMethodNameParserRuleCall_2_3_0()); }
	ruleMethodName{ after(grammarAccess.getTraitOperationAccess().getNewMethodMethodNameParserRuleCall_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TraitOperation__OriginalMethodAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitOperationAccess().getOriginalMethodMethodNameCrossReference_3_1_0()); }
(
{ before(grammarAccess.getTraitOperationAccess().getOriginalMethodMethodNameIDTerminalRuleCall_3_1_0_1()); }
	RULE_ID{ after(grammarAccess.getTraitOperationAccess().getOriginalMethodMethodNameIDTerminalRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getTraitOperationAccess().getOriginalMethodMethodNameCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TraitOperation__NewMethodAssignment_3_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitOperationAccess().getNewMethodMethodNameParserRuleCall_3_3_0()); }
	ruleMethodName{ after(grammarAccess.getTraitOperationAccess().getNewMethodMethodNameParserRuleCall_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TraitOperation__OriginalFieldAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitOperationAccess().getOriginalFieldFieldNameCrossReference_4_1_0()); }
(
{ before(grammarAccess.getTraitOperationAccess().getOriginalFieldFieldNameIDTerminalRuleCall_4_1_0_1()); }
	RULE_ID{ after(grammarAccess.getTraitOperationAccess().getOriginalFieldFieldNameIDTerminalRuleCall_4_1_0_1()); }
)
{ after(grammarAccess.getTraitOperationAccess().getOriginalFieldFieldNameCrossReference_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TraitOperation__NewFieldAssignment_4_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitOperationAccess().getNewFieldFieldNameParserRuleCall_4_3_0()); }
	ruleFieldName{ after(grammarAccess.getTraitOperationAccess().getNewFieldFieldNameParserRuleCall_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TraitOperation__OriginalFieldAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitOperationAccess().getOriginalFieldFieldNameCrossReference_5_1_0()); }
(
{ before(grammarAccess.getTraitOperationAccess().getOriginalFieldFieldNameIDTerminalRuleCall_5_1_0_1()); }
	RULE_ID{ after(grammarAccess.getTraitOperationAccess().getOriginalFieldFieldNameIDTerminalRuleCall_5_1_0_1()); }
)
{ after(grammarAccess.getTraitOperationAccess().getOriginalFieldFieldNameCrossReference_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TraitOperation__NewFieldAssignment_5_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraitOperationAccess().getNewFieldFieldNameParserRuleCall_5_3_0()); }
	ruleFieldName{ after(grammarAccess.getTraitOperationAccess().getNewFieldFieldNameParserRuleCall_5_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDeclaration__ModifierAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldDeclarationAccess().getModifierTransientKeyword_1_0_0()); }
(
{ before(grammarAccess.getFieldDeclarationAccess().getModifierTransientKeyword_1_0_0()); }

	'transient' 

{ after(grammarAccess.getFieldDeclarationAccess().getModifierTransientKeyword_1_0_0()); }
)

{ after(grammarAccess.getFieldDeclarationAccess().getModifierTransientKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDeclaration__ModifierAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldDeclarationAccess().getModifierVolatileKeyword_1_1_0()); }
(
{ before(grammarAccess.getFieldDeclarationAccess().getModifierVolatileKeyword_1_1_0()); }

	'volatile' 

{ after(grammarAccess.getFieldDeclarationAccess().getModifierVolatileKeyword_1_1_0()); }
)

{ after(grammarAccess.getFieldDeclarationAccess().getModifierVolatileKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDeclaration__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldDeclarationAccess().getTypeTypeParserRuleCall_2_0()); }
	ruleType{ after(grammarAccess.getFieldDeclarationAccess().getTypeTypeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDeclaration__FieldRefAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldDeclarationAccess().getFieldRefFieldNameParserRuleCall_3_0()); }
	ruleFieldName{ after(grammarAccess.getFieldDeclarationAccess().getFieldRefFieldNameParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredField__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredFieldAccess().getTypeTypeParserRuleCall_1_0()); }
	ruleType{ after(grammarAccess.getRequiredFieldAccess().getTypeTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredField__FieldRefAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredFieldAccess().getFieldRefFieldNameParserRuleCall_2_0()); }
	ruleFieldName{ after(grammarAccess.getRequiredFieldAccess().getFieldRefFieldNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredMethod__ReturnTypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredMethodAccess().getReturnTypeReturnTypeParserRuleCall_1_0()); }
	ruleReturnType{ after(grammarAccess.getRequiredMethodAccess().getReturnTypeReturnTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredMethod__MethodRefAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredMethodAccess().getMethodRefMethodNameParserRuleCall_2_0()); }
	ruleMethodName{ after(grammarAccess.getRequiredMethodAccess().getMethodRefMethodNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredMethod__ParameterListAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredMethodAccess().getParameterListParameterParserRuleCall_4_0_0()); }
	ruleParameter{ after(grammarAccess.getRequiredMethodAccess().getParameterListParameterParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredMethod__ParameterListAssignment_4_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredMethodAccess().getParameterListParameterParserRuleCall_4_1_1_0()); }
	ruleParameter{ after(grammarAccess.getRequiredMethodAccess().getParameterListParameterParserRuleCall_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProvidedMethod__IsSynchronizedAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedMethodAccess().getIsSynchronizedSynchronizedKeyword_1_0()); }
(
{ before(grammarAccess.getProvidedMethodAccess().getIsSynchronizedSynchronizedKeyword_1_0()); }

	'synchronized' 

{ after(grammarAccess.getProvidedMethodAccess().getIsSynchronizedSynchronizedKeyword_1_0()); }
)

{ after(grammarAccess.getProvidedMethodAccess().getIsSynchronizedSynchronizedKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProvidedMethod__ReturnTypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedMethodAccess().getReturnTypeReturnTypeParserRuleCall_2_0()); }
	ruleReturnType{ after(grammarAccess.getProvidedMethodAccess().getReturnTypeReturnTypeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProvidedMethod__MethodRefAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedMethodAccess().getMethodRefMethodNameParserRuleCall_3_0()); }
	ruleMethodName{ after(grammarAccess.getProvidedMethodAccess().getMethodRefMethodNameParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProvidedMethod__ParameterListAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedMethodAccess().getParameterListParameterParserRuleCall_5_0_0()); }
	ruleParameter{ after(grammarAccess.getProvidedMethodAccess().getParameterListParameterParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProvidedMethod__ParameterListAssignment_5_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedMethodAccess().getParameterListParameterParserRuleCall_5_1_1_0()); }
	ruleParameter{ after(grammarAccess.getProvidedMethodAccess().getParameterListParameterParserRuleCall_5_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProvidedMethod__BlockAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedMethodAccess().getBlockBlockParserRuleCall_8_0()); }
	ruleBlock{ after(grammarAccess.getProvidedMethodAccess().getBlockBlockParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProvidedMethod__ReturnStatementAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedMethodAccess().getReturnStatementReturnStatementParserRuleCall_9_0()); }
	ruleReturnStatement{ after(grammarAccess.getProvidedMethodAccess().getReturnStatementReturnStatementParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getConstructorAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__ParameterListAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getParameterListParameterParserRuleCall_2_0_0()); }
	ruleParameter{ after(grammarAccess.getConstructorAccess().getParameterListParameterParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__ParameterListAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getParameterListParameterParserRuleCall_2_1_1_0()); }
	ruleParameter{ after(grammarAccess.getConstructorAccess().getParameterListParameterParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__BlockAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getBlockBlockParserRuleCall_5_0()); }
	ruleBlock{ after(grammarAccess.getConstructorAccess().getBlockBlockParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__ExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStatementAccess().getExpressionExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getReturnStatementAccess().getExpressionExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getTypeTypeParserRuleCall_1_0()); }
	ruleType{ after(grammarAccess.getParameterAccess().getTypeTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldName__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldNameAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getFieldNameAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodName__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodNameAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getMethodNameAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__InterfaceTypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getInterfaceTypeInterfaceCrossReference_0_0()); }
(
{ before(grammarAccess.getTypeAccess().getInterfaceTypeInterfaceIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getTypeAccess().getInterfaceTypeInterfaceIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getTypeAccess().getInterfaceTypeInterfaceCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__PrimitiveTypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getPrimitiveTypeByteKeyword_1_0()); }
(
{ before(grammarAccess.getTypeAccess().getPrimitiveTypeByteKeyword_1_0()); }

	'byte' 

{ after(grammarAccess.getTypeAccess().getPrimitiveTypeByteKeyword_1_0()); }
)

{ after(grammarAccess.getTypeAccess().getPrimitiveTypeByteKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__PrimitiveTypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getPrimitiveTypeCharKeyword_2_0()); }
(
{ before(grammarAccess.getTypeAccess().getPrimitiveTypeCharKeyword_2_0()); }

	'char' 

{ after(grammarAccess.getTypeAccess().getPrimitiveTypeCharKeyword_2_0()); }
)

{ after(grammarAccess.getTypeAccess().getPrimitiveTypeCharKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__PrimitiveTypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getPrimitiveTypeBooleanKeyword_3_0()); }
(
{ before(grammarAccess.getTypeAccess().getPrimitiveTypeBooleanKeyword_3_0()); }

	'boolean' 

{ after(grammarAccess.getTypeAccess().getPrimitiveTypeBooleanKeyword_3_0()); }
)

{ after(grammarAccess.getTypeAccess().getPrimitiveTypeBooleanKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__PrimitiveTypeAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getPrimitiveTypeShortKeyword_4_0()); }
(
{ before(grammarAccess.getTypeAccess().getPrimitiveTypeShortKeyword_4_0()); }

	'short' 

{ after(grammarAccess.getTypeAccess().getPrimitiveTypeShortKeyword_4_0()); }
)

{ after(grammarAccess.getTypeAccess().getPrimitiveTypeShortKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__PrimitiveTypeAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getPrimitiveTypeIntKeyword_5_0()); }
(
{ before(grammarAccess.getTypeAccess().getPrimitiveTypeIntKeyword_5_0()); }

	'int' 

{ after(grammarAccess.getTypeAccess().getPrimitiveTypeIntKeyword_5_0()); }
)

{ after(grammarAccess.getTypeAccess().getPrimitiveTypeIntKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__PrimitiveTypeAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getPrimitiveTypeLongKeyword_6_0()); }
(
{ before(grammarAccess.getTypeAccess().getPrimitiveTypeLongKeyword_6_0()); }

	'long' 

{ after(grammarAccess.getTypeAccess().getPrimitiveTypeLongKeyword_6_0()); }
)

{ after(grammarAccess.getTypeAccess().getPrimitiveTypeLongKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__PrimitiveTypeAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getPrimitiveTypeFloatKeyword_7_0()); }
(
{ before(grammarAccess.getTypeAccess().getPrimitiveTypeFloatKeyword_7_0()); }

	'float' 

{ after(grammarAccess.getTypeAccess().getPrimitiveTypeFloatKeyword_7_0()); }
)

{ after(grammarAccess.getTypeAccess().getPrimitiveTypeFloatKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__PrimitiveTypeAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getPrimitiveTypeDoubleKeyword_8_0()); }
(
{ before(grammarAccess.getTypeAccess().getPrimitiveTypeDoubleKeyword_8_0()); }

	'double' 

{ after(grammarAccess.getTypeAccess().getPrimitiveTypeDoubleKeyword_8_0()); }
)

{ after(grammarAccess.getTypeAccess().getPrimitiveTypeDoubleKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnType__InterfaceTypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnTypeAccess().getInterfaceTypeInterfaceCrossReference_0_0()); }
(
{ before(grammarAccess.getReturnTypeAccess().getInterfaceTypeInterfaceIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getReturnTypeAccess().getInterfaceTypeInterfaceIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getReturnTypeAccess().getInterfaceTypeInterfaceCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnType__PrimitiveTypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnTypeAccess().getPrimitiveTypeByteKeyword_1_0()); }
(
{ before(grammarAccess.getReturnTypeAccess().getPrimitiveTypeByteKeyword_1_0()); }

	'byte' 

{ after(grammarAccess.getReturnTypeAccess().getPrimitiveTypeByteKeyword_1_0()); }
)

{ after(grammarAccess.getReturnTypeAccess().getPrimitiveTypeByteKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnType__PrimitiveTypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnTypeAccess().getPrimitiveTypeCharKeyword_2_0()); }
(
{ before(grammarAccess.getReturnTypeAccess().getPrimitiveTypeCharKeyword_2_0()); }

	'char' 

{ after(grammarAccess.getReturnTypeAccess().getPrimitiveTypeCharKeyword_2_0()); }
)

{ after(grammarAccess.getReturnTypeAccess().getPrimitiveTypeCharKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnType__PrimitiveTypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnTypeAccess().getPrimitiveTypeBooleanKeyword_3_0()); }
(
{ before(grammarAccess.getReturnTypeAccess().getPrimitiveTypeBooleanKeyword_3_0()); }

	'boolean' 

{ after(grammarAccess.getReturnTypeAccess().getPrimitiveTypeBooleanKeyword_3_0()); }
)

{ after(grammarAccess.getReturnTypeAccess().getPrimitiveTypeBooleanKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnType__PrimitiveTypeAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnTypeAccess().getPrimitiveTypeShortKeyword_4_0()); }
(
{ before(grammarAccess.getReturnTypeAccess().getPrimitiveTypeShortKeyword_4_0()); }

	'short' 

{ after(grammarAccess.getReturnTypeAccess().getPrimitiveTypeShortKeyword_4_0()); }
)

{ after(grammarAccess.getReturnTypeAccess().getPrimitiveTypeShortKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnType__PrimitiveTypeAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnTypeAccess().getPrimitiveTypeIntKeyword_5_0()); }
(
{ before(grammarAccess.getReturnTypeAccess().getPrimitiveTypeIntKeyword_5_0()); }

	'int' 

{ after(grammarAccess.getReturnTypeAccess().getPrimitiveTypeIntKeyword_5_0()); }
)

{ after(grammarAccess.getReturnTypeAccess().getPrimitiveTypeIntKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnType__PrimitiveTypeAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnTypeAccess().getPrimitiveTypeLongKeyword_6_0()); }
(
{ before(grammarAccess.getReturnTypeAccess().getPrimitiveTypeLongKeyword_6_0()); }

	'long' 

{ after(grammarAccess.getReturnTypeAccess().getPrimitiveTypeLongKeyword_6_0()); }
)

{ after(grammarAccess.getReturnTypeAccess().getPrimitiveTypeLongKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnType__PrimitiveTypeAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnTypeAccess().getPrimitiveTypeFloatKeyword_7_0()); }
(
{ before(grammarAccess.getReturnTypeAccess().getPrimitiveTypeFloatKeyword_7_0()); }

	'float' 

{ after(grammarAccess.getReturnTypeAccess().getPrimitiveTypeFloatKeyword_7_0()); }
)

{ after(grammarAccess.getReturnTypeAccess().getPrimitiveTypeFloatKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnType__PrimitiveTypeAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnTypeAccess().getPrimitiveTypeDoubleKeyword_8_0()); }
(
{ before(grammarAccess.getReturnTypeAccess().getPrimitiveTypeDoubleKeyword_8_0()); }

	'double' 

{ after(grammarAccess.getReturnTypeAccess().getPrimitiveTypeDoubleKeyword_8_0()); }
)

{ after(grammarAccess.getReturnTypeAccess().getPrimitiveTypeDoubleKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnType__PrimitiveTypeAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnTypeAccess().getPrimitiveTypeVoidKeyword_9_0()); }
(
{ before(grammarAccess.getReturnTypeAccess().getPrimitiveTypeVoidKeyword_9_0()); }

	'void' 

{ after(grammarAccess.getReturnTypeAccess().getPrimitiveTypeVoidKeyword_9_0()); }
)

{ after(grammarAccess.getReturnTypeAccess().getPrimitiveTypeVoidKeyword_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Block__ParameterListAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getParameterListLocalParameterParserRuleCall_1_0()); }
	ruleLocalParameter{ after(grammarAccess.getBlockAccess().getParameterListLocalParameterParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Block__StatementListAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getStatementListStatementParserRuleCall_2_0()); }
	ruleStatement{ after(grammarAccess.getBlockAccess().getStatementListStatementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionStatement__ExpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionStatementAccess().getExpressionExpressionParserRuleCall_0_0()); }
	ruleExpression{ after(grammarAccess.getExpressionStatementAccess().getExpressionExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElseStatement__CondictionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseStatementAccess().getCondictionBooleanExpressionParserRuleCall_2_0()); }
	ruleBooleanExpression{ after(grammarAccess.getIfThenElseStatementAccess().getCondictionBooleanExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElseStatement__TrueBranchAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseStatementAccess().getTrueBranchBlockParserRuleCall_5_0()); }
	ruleBlock{ after(grammarAccess.getIfThenElseStatementAccess().getTrueBranchBlockParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElseStatement__FalseBranchAssignment_7_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseStatementAccess().getFalseBranchBlockParserRuleCall_7_2_0()); }
	ruleBlock{ after(grammarAccess.getIfThenElseStatementAccess().getFalseBranchBlockParserRuleCall_7_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__CondictionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getCondictionBooleanExpressionParserRuleCall_2_0()); }
	ruleBooleanExpression{ after(grammarAccess.getWhileStatementAccess().getCondictionBooleanExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__WhileBlockAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getWhileBlockBlockParserRuleCall_5_0()); }
	ruleBlock{ after(grammarAccess.getWhileStatementAccess().getWhileBlockBlockParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__AtomicListAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanExpressionAccess().getAtomicListAtomicBooleanExpressionParserRuleCall_1_0()); }
	ruleAtomicBooleanExpression{ after(grammarAccess.getBooleanExpressionAccess().getAtomicListAtomicBooleanExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__BooleanOperatorListAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanExpressionAccess().getBooleanOperatorListBooleanOperatorParserRuleCall_2_0_0()); }
	ruleBooleanOperator{ after(grammarAccess.getBooleanExpressionAccess().getBooleanOperatorListBooleanOperatorParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__AtomicListAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanExpressionAccess().getAtomicListAtomicBooleanExpressionParserRuleCall_2_1_0()); }
	ruleAtomicBooleanExpression{ after(grammarAccess.getBooleanExpressionAccess().getAtomicListAtomicBooleanExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOperator__OperatorAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanOperatorAccess().getOperatorAmpersandKeyword_0_0()); }
(
{ before(grammarAccess.getBooleanOperatorAccess().getOperatorAmpersandKeyword_0_0()); }

	'&' 

{ after(grammarAccess.getBooleanOperatorAccess().getOperatorAmpersandKeyword_0_0()); }
)

{ after(grammarAccess.getBooleanOperatorAccess().getOperatorAmpersandKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOperator__OperatorAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanOperatorAccess().getOperatorAmpersandAmpersandKeyword_1_0()); }
(
{ before(grammarAccess.getBooleanOperatorAccess().getOperatorAmpersandAmpersandKeyword_1_0()); }

	'&&' 

{ after(grammarAccess.getBooleanOperatorAccess().getOperatorAmpersandAmpersandKeyword_1_0()); }
)

{ after(grammarAccess.getBooleanOperatorAccess().getOperatorAmpersandAmpersandKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOperator__OperatorAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanOperatorAccess().getOperatorVerticalLineKeyword_2_0()); }
(
{ before(grammarAccess.getBooleanOperatorAccess().getOperatorVerticalLineKeyword_2_0()); }

	'|' 

{ after(grammarAccess.getBooleanOperatorAccess().getOperatorVerticalLineKeyword_2_0()); }
)

{ after(grammarAccess.getBooleanOperatorAccess().getOperatorVerticalLineKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOperator__OperatorAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanOperatorAccess().getOperatorVerticalLineVerticalLineKeyword_3_0()); }
(
{ before(grammarAccess.getBooleanOperatorAccess().getOperatorVerticalLineVerticalLineKeyword_3_0()); }

	'||' 

{ after(grammarAccess.getBooleanOperatorAccess().getOperatorVerticalLineVerticalLineKeyword_3_0()); }
)

{ after(grammarAccess.getBooleanOperatorAccess().getOperatorVerticalLineVerticalLineKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOperator__OperatorAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanOperatorAccess().getOperatorCircumflexAccentKeyword_4_0()); }
(
{ before(grammarAccess.getBooleanOperatorAccess().getOperatorCircumflexAccentKeyword_4_0()); }

	'^' 

{ after(grammarAccess.getBooleanOperatorAccess().getOperatorCircumflexAccentKeyword_4_0()); }
)

{ after(grammarAccess.getBooleanOperatorAccess().getOperatorCircumflexAccentKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleComparation__NegatedAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleComparationAccess().getNegatedExclamationMarkKeyword_0_0()); }
(
{ before(grammarAccess.getSimpleComparationAccess().getNegatedExclamationMarkKeyword_0_0()); }

	'!' 

{ after(grammarAccess.getSimpleComparationAccess().getNegatedExclamationMarkKeyword_0_0()); }
)

{ after(grammarAccess.getSimpleComparationAccess().getNegatedExclamationMarkKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleComparation__LeftExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleComparationAccess().getLeftExpressionExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getSimpleComparationAccess().getLeftExpressionExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleComparation__CompareAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleComparationAccess().getCompareCompareOperatorParserRuleCall_2_0_0()); }
	ruleCompareOperator{ after(grammarAccess.getSimpleComparationAccess().getCompareCompareOperatorParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleComparation__RightExpressionAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleComparationAccess().getRightExpressionExpressionParserRuleCall_2_1_0()); }
	ruleExpression{ after(grammarAccess.getSimpleComparationAccess().getRightExpressionExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NestedBooleanExpression__NegatedAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedBooleanExpressionAccess().getNegatedExclamationMarkKeyword_0_0()); }
(
{ before(grammarAccess.getNestedBooleanExpressionAccess().getNegatedExclamationMarkKeyword_0_0()); }

	'!' 

{ after(grammarAccess.getNestedBooleanExpressionAccess().getNegatedExclamationMarkKeyword_0_0()); }
)

{ after(grammarAccess.getNestedBooleanExpressionAccess().getNegatedExclamationMarkKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NestedBooleanExpression__NestedExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedBooleanExpressionAccess().getNestedExpressionBooleanExpressionParserRuleCall_2_0()); }
	ruleBooleanExpression{ after(grammarAccess.getNestedBooleanExpressionAccess().getNestedExpressionBooleanExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperator__OperatorAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperatorAccess().getOperatorLessThanSignKeyword_0_0()); }
(
{ before(grammarAccess.getCompareOperatorAccess().getOperatorLessThanSignKeyword_0_0()); }

	'<' 

{ after(grammarAccess.getCompareOperatorAccess().getOperatorLessThanSignKeyword_0_0()); }
)

{ after(grammarAccess.getCompareOperatorAccess().getOperatorLessThanSignKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperator__OperatorAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperatorAccess().getOperatorLessThanSignEqualsSignKeyword_1_0()); }
(
{ before(grammarAccess.getCompareOperatorAccess().getOperatorLessThanSignEqualsSignKeyword_1_0()); }

	'<=' 

{ after(grammarAccess.getCompareOperatorAccess().getOperatorLessThanSignEqualsSignKeyword_1_0()); }
)

{ after(grammarAccess.getCompareOperatorAccess().getOperatorLessThanSignEqualsSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperator__OperatorAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperatorAccess().getOperatorEqualsSignEqualsSignKeyword_2_0()); }
(
{ before(grammarAccess.getCompareOperatorAccess().getOperatorEqualsSignEqualsSignKeyword_2_0()); }

	'==' 

{ after(grammarAccess.getCompareOperatorAccess().getOperatorEqualsSignEqualsSignKeyword_2_0()); }
)

{ after(grammarAccess.getCompareOperatorAccess().getOperatorEqualsSignEqualsSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperator__OperatorAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperatorAccess().getOperatorExclamationMarkEqualsSignKeyword_3_0()); }
(
{ before(grammarAccess.getCompareOperatorAccess().getOperatorExclamationMarkEqualsSignKeyword_3_0()); }

	'!=' 

{ after(grammarAccess.getCompareOperatorAccess().getOperatorExclamationMarkEqualsSignKeyword_3_0()); }
)

{ after(grammarAccess.getCompareOperatorAccess().getOperatorExclamationMarkEqualsSignKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperator__OperatorAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperatorAccess().getOperatorGreaterThanSignKeyword_4_0()); }
(
{ before(grammarAccess.getCompareOperatorAccess().getOperatorGreaterThanSignKeyword_4_0()); }

	'>' 

{ after(grammarAccess.getCompareOperatorAccess().getOperatorGreaterThanSignKeyword_4_0()); }
)

{ after(grammarAccess.getCompareOperatorAccess().getOperatorGreaterThanSignKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperator__OperatorAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperatorAccess().getOperatorGreaterThanSignEqualsSignKeyword_5_0()); }
(
{ before(grammarAccess.getCompareOperatorAccess().getOperatorGreaterThanSignEqualsSignKeyword_5_0()); }

	'>=' 

{ after(grammarAccess.getCompareOperatorAccess().getOperatorGreaterThanSignEqualsSignKeyword_5_0()); }
)

{ after(grammarAccess.getCompareOperatorAccess().getOperatorGreaterThanSignEqualsSignKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalParameter__TypeAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalParameterAccess().getTypeTypeParserRuleCall_0_1_0()); }
	ruleType{ after(grammarAccess.getLocalParameterAccess().getTypeTypeParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalParameter__NameAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalParameterAccess().getNameIDTerminalRuleCall_0_2_0()); }
	RULE_ID{ after(grammarAccess.getLocalParameterAccess().getNameIDTerminalRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalParameter__ValueAssignment_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalParameterAccess().getValueExpressionParserRuleCall_0_4_0()); }
	ruleExpression{ after(grammarAccess.getLocalParameterAccess().getValueExpressionParserRuleCall_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalParameter__TypeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalParameterAccess().getTypeTypeParserRuleCall_1_1_0()); }
	ruleType{ after(grammarAccess.getLocalParameterAccess().getTypeTypeParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalParameter__NameAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalParameterAccess().getNameIDTerminalRuleCall_1_2_0()); }
	RULE_ID{ after(grammarAccess.getLocalParameterAccess().getNameIDTerminalRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalParameter__ValueAssignment_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalParameterAccess().getValueBooleanExpressionParserRuleCall_1_4_0()); }
	ruleBooleanExpression{ after(grammarAccess.getLocalParameterAccess().getValueBooleanExpressionParserRuleCall_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__SignAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getSignHyphenMinusKeyword_1_0_0()); }
(
{ before(grammarAccess.getExpressionAccess().getSignHyphenMinusKeyword_1_0_0()); }

	'-' 

{ after(grammarAccess.getExpressionAccess().getSignHyphenMinusKeyword_1_0_0()); }
)

{ after(grammarAccess.getExpressionAccess().getSignHyphenMinusKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__SignAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getSignPlusSignKeyword_1_1_0()); }
(
{ before(grammarAccess.getExpressionAccess().getSignPlusSignKeyword_1_1_0()); }

	'+' 

{ after(grammarAccess.getExpressionAccess().getSignPlusSignKeyword_1_1_0()); }
)

{ after(grammarAccess.getExpressionAccess().getSignPlusSignKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__TermListAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getTermListDottedExpressionParserRuleCall_2_0()); }
	ruleDottedExpression{ after(grammarAccess.getExpressionAccess().getTermListDottedExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__OperatorListAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getOperatorListAlternatives_3_0_0()); }
(rule__Expression__OperatorListAlternatives_3_0_0)
{ after(grammarAccess.getExpressionAccess().getOperatorListAlternatives_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__TermListAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getTermListDottedExpressionParserRuleCall_3_1_0()); }
	ruleDottedExpression{ after(grammarAccess.getExpressionAccess().getTermListDottedExpressionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DottedExpression__StartAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDottedExpressionAccess().getStartStartParserRuleCall_0_0()); }
	ruleStart{ after(grammarAccess.getDottedExpressionAccess().getStartStartParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DottedExpression__MessageAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDottedExpressionAccess().getMessageMessageParserRuleCall_1_2_0()); }
	ruleMessage{ after(grammarAccess.getDottedExpressionAccess().getMessageMessageParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DottedExpression__MessageAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDottedExpressionAccess().getMessageFieldAccessParserRuleCall_2_2_0()); }
	ruleFieldAccess{ after(grammarAccess.getDottedExpressionAccess().getMessageFieldAccessParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DottedExpression__ValueAssignment_2_3_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDottedExpressionAccess().getValueExpressionParserRuleCall_2_3_1_0_0()); }
	ruleExpression{ after(grammarAccess.getDottedExpressionAccess().getValueExpressionParserRuleCall_2_3_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DottedExpression__ValueAssignment_2_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDottedExpressionAccess().getValueBooleanExpressionParserRuleCall_2_3_1_1_0()); }
	ruleBooleanExpression{ after(grammarAccess.getDottedExpressionAccess().getValueBooleanExpressionParserRuleCall_2_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Null__NullAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullAccess().getNullNullKeyword_0()); }
(
{ before(grammarAccess.getNullAccess().getNullNullKeyword_0()); }

	'null' 

{ after(grammarAccess.getNullAccess().getNullNullKeyword_0()); }
)

{ after(grammarAccess.getNullAccess().getNullNullKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Input__InputAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputAccess().getInputInKeyword_0()); }
(
{ before(grammarAccess.getInputAccess().getInputInKeyword_0()); }

	'in' 

{ after(grammarAccess.getInputAccess().getInputInKeyword_0()); }
)

{ after(grammarAccess.getInputAccess().getInputInKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Args__ArgsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgsAccess().getArgsArgsKeyword_0()); }
(
{ before(grammarAccess.getArgsAccess().getArgsArgsKeyword_0()); }

	'args' 

{ after(grammarAccess.getArgsAccess().getArgsArgsKeyword_0()); }
)

{ after(grammarAccess.getArgsAccess().getArgsArgsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Output__OutputAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputAccess().getOutputOutKeyword_0()); }
(
{ before(grammarAccess.getOutputAccess().getOutputOutKeyword_0()); }

	'out' 

{ after(grammarAccess.getOutputAccess().getOutputOutKeyword_0()); }
)

{ after(grammarAccess.getOutputAccess().getOutputOutKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanConstant__ValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanConstantAccess().getValueTrueKeyword_0_0()); }
(
{ before(grammarAccess.getBooleanConstantAccess().getValueTrueKeyword_0_0()); }

	'true' 

{ after(grammarAccess.getBooleanConstantAccess().getValueTrueKeyword_0_0()); }
)

{ after(grammarAccess.getBooleanConstantAccess().getValueTrueKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanConstant__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanConstantAccess().getValueFalseKeyword_1_0()); }
(
{ before(grammarAccess.getBooleanConstantAccess().getValueFalseKeyword_1_0()); }

	'false' 

{ after(grammarAccess.getBooleanConstantAccess().getValueFalseKeyword_1_0()); }
)

{ after(grammarAccess.getBooleanConstantAccess().getValueFalseKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Number__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getValueINTTerminalRuleCall_0()); }
	RULE_INT{ after(grammarAccess.getNumberAccess().getValueINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringConstant__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringConstantAccess().getValueSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getStringConstantAccess().getValueSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__This__ThisAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThisAccess().getThisThisKeyword_0()); }
(
{ before(grammarAccess.getThisAccess().getThisThisKeyword_0()); }

	'this' 

{ after(grammarAccess.getThisAccess().getThisThisKeyword_0()); }
)

{ after(grammarAccess.getThisAccess().getThisThisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterReference__ParameterAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterReferenceAccess().getParameterParameterCrossReference_0()); }
(
{ before(grammarAccess.getParameterReferenceAccess().getParameterParameterIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getParameterReferenceAccess().getParameterParameterIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getParameterReferenceAccess().getParameterParameterCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorInvocation__ClassRefAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorInvocationAccess().getClassRefClassCrossReference_1_0()); }
(
{ before(grammarAccess.getConstructorInvocationAccess().getClassRefClassIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getConstructorInvocationAccess().getClassRefClassIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getConstructorInvocationAccess().getClassRefClassCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorInvocation__ArgumentListAssignment_3_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorInvocationAccess().getArgumentListExpressionParserRuleCall_3_0_0_0_0()); }
	ruleExpression{ after(grammarAccess.getConstructorInvocationAccess().getArgumentListExpressionParserRuleCall_3_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorInvocation__ArgumentListAssignment_3_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorInvocationAccess().getArgumentListBooleanExpressionParserRuleCall_3_0_0_1_0()); }
	ruleBooleanExpression{ after(grammarAccess.getConstructorInvocationAccess().getArgumentListBooleanExpressionParserRuleCall_3_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorInvocation__ArgumentListAssignment_3_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorInvocationAccess().getArgumentListExpressionParserRuleCall_3_1_0_0()); }
	ruleExpression{ after(grammarAccess.getConstructorInvocationAccess().getArgumentListExpressionParserRuleCall_3_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorInvocation__ArgumentListAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorInvocationAccess().getArgumentListBooleanExpressionParserRuleCall_3_1_1_0()); }
	ruleBooleanExpression{ after(grammarAccess.getConstructorInvocationAccess().getArgumentListBooleanExpressionParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastAccess().getTypeTypeParserRuleCall_1_0()); }
	ruleType{ after(grammarAccess.getCastAccess().getTypeTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__StartAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastAccess().getStartStartParserRuleCall_3_0()); }
	ruleStart{ after(grammarAccess.getCastAccess().getStartStartParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NestedExpression__ExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedExpressionAccess().getExpressionExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getNestedExpressionAccess().getExpressionExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__MethodAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodInvocationAccess().getMethodMethodNameCrossReference_0_0()); }
(
{ before(grammarAccess.getMethodInvocationAccess().getMethodMethodNameIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getMethodInvocationAccess().getMethodMethodNameIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getMethodInvocationAccess().getMethodMethodNameCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__ArgumentListAssignment_2_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodInvocationAccess().getArgumentListExpressionParserRuleCall_2_0_0_0()); }
	ruleExpression{ after(grammarAccess.getMethodInvocationAccess().getArgumentListExpressionParserRuleCall_2_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__ArgumentListAssignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodInvocationAccess().getArgumentListBooleanExpressionParserRuleCall_2_0_1_0()); }
	ruleBooleanExpression{ after(grammarAccess.getMethodInvocationAccess().getArgumentListBooleanExpressionParserRuleCall_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__ArgumentListAssignment_2_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodInvocationAccess().getArgumentListExpressionParserRuleCall_2_1_1_0_0()); }
	ruleExpression{ after(grammarAccess.getMethodInvocationAccess().getArgumentListExpressionParserRuleCall_2_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__ArgumentListAssignment_2_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodInvocationAccess().getArgumentListBooleanExpressionParserRuleCall_2_1_1_1_0()); }
	ruleBooleanExpression{ after(grammarAccess.getMethodInvocationAccess().getArgumentListBooleanExpressionParserRuleCall_2_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldAccess__FieldAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccessAccess().getFieldFieldNameCrossReference_0()); }
(
{ before(grammarAccess.getFieldAccessAccess().getFieldFieldNameIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getFieldAccessAccess().getFieldFieldNameIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getFieldAccessAccess().getFieldFieldNameCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterAssignment__ParameterAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAssignmentAccess().getParameterParameterCrossReference_0_0()); }
(
{ before(grammarAccess.getParameterAssignmentAccess().getParameterParameterIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getParameterAssignmentAccess().getParameterParameterIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getParameterAssignmentAccess().getParameterParameterCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterAssignment__ValueAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAssignmentAccess().getValueExpressionParserRuleCall_2_0_0()); }
	ruleExpression{ after(grammarAccess.getParameterAssignmentAccess().getValueExpressionParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterAssignment__ValueAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAssignmentAccess().getValueBooleanExpressionParserRuleCall_2_1_0()); }
	ruleBooleanExpression{ after(grammarAccess.getParameterAssignmentAccess().getValueBooleanExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


